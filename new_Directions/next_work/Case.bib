@string{LNCS = {LNCS}}

@inproceedings{BraemEilersMuellerSierraSummers21,
 author = {C. Br\"am and M. Eilers and P. M\"uller and R. Sierra and A. J. Summers},
 title = {Rich Specifications for Ethereum Smart Contract Verification },
 booktitle = {Object-Oriented Programming Systems, Languages, and Applications (OOPSLA)},
 journal = {Proc. ACM Program. Lang.},
 year = {2021},
 issue_date = {October 2021},
 publisher = {ACM},
 address = {New York, NY, USA},
 volume = {5},
 number = {OOPSLA},
 doi = {10.1145/3485523},
 articleno = {146},
 numpages = {30},
}
@inproceedings{FASE,
author="Drossopoulou, Sophia
and Noble, James
and Mackay, Julian
and Eisenbach, Susan",
Xeditor="Wehrheim, Heike
and Cabot, Jordi",
title="Holistic Specifications for Robust Programs",
Xbooktitle="Fundamental Approaches to Software Engineering",
booktitle={{FASE}},
year="2020",
Xpublisher="Springer International Publishing",
address="Cham",
pages="420--440",
Xabstract="Functional specifications describe what program components can do: the sufficient conditions to invoke components' operations. They allow us to reason about the use of components in a closed world setting, where components interact with known client code, and where the client code must establish the appropriate pre-conditions before calling into a component.",
iXsbn="978-3-030-45234-6",
doi="10.1007/978-3-030-45234-6_21"
}

@inproceedings{OOPSLA22,
author="Mackay, Julian
and Eisenbach, Susan
and Noble, James
and Drossopoulou, Sophia",
title="Necessity Specifications are Necessary",
booktitle="Object Oriented Programming and Systems",
year="2022",
publisher="ACM"
}

@inproceedings{AOP,
  title = {{A}spect-{O}riented {P}rogramming},
  author = "G. Kiczales and J. Lamping and A. Mehdhekar and C. Maeda and C. V. Lopes and J. Loingtier and J. Irwin",
  year = "1997",
  booktitle = "ECOOP",
  series = "LNCS"}

@inproceedings{IDF-ecoop,
  title = {Implicit dynamic frames: {C}ombining dynamic frames and separation logic},
  author = "Jan Smans and Bart Jacobs and Frank Piessens",
  year = "2009",
  booktitle = "ECOOP",
  series = "LNCS"} 

@INPROCEEDINGS{DenyGuarantee,
    author = {Mike Dodds and Xinyu Feng and Matthew Parkinson and Viktor Vafeiadis},
    title = {Deny-guarantee reasoning},
    booktitle = {ESOP},
    year = {2009},
    publisher = {Springer}}

@inproceedings{secureJS,
title = {{Automated Analysis of Security-Critical {JavaScript} APIs}},
author  = {Ankur Taly and Ulfar Erlingsson and John C. Mitchell and Mark S. Miller and Jasvir Nagra},
year  = 2011,
booktitle = {IEEE Symposium on Security and Privacy (SP)}
}

@InProceedings{polymer,
  author = "Lujo Bauer and Jay Ligatti and David Walker",
  title = "Composing Security Policies with {Polymer}",
  booktitle = "PLDI",
  year = 2005}

@InProceedings{ODs,
title = "Ownership Domains: Separating Aliasing Policy from Mechanism",
author = "Jonathan Aldrich and Craig Chambers",
year = "2004",
booktitle = "ECOOP",
series = "Springer"}

@InProceedings{KeyKOS,
title = {KeyKOS - A Secure, High-Performance Environment for S\/370},
author = "Bill Frantz",
year = "1998",
booktitle = "SHARE 52 I "}

@InProceedings{adsafe,
title = {{An Analysis of the Mozilla Jetpack Extension FrameworK}},
Author = "Rezwana Karim and Mohan Dhawan and Vinod Ganapathy and Chung-Chieh Shan",
year = "2012",
booktitle = "ECOOP",
series = "Springer"}

@InProceedings{objInvarsXXX,
title = "Object Invariants in Dynamic Contexts",
author = "K. Rustan M. Leino and Peter M{\"{u}}ller",
year = "2004",
booktitle = "ECOOP",
series = "Springer"}

@InProceedings{WuLam,
title = "A semantic model for authentication Protocols",
author = "T. Wood and S. Lam",
year = "1993",
booktitle = "IEEE Computer Society Symposium on Research in Security and Privacy"}

@InProceedings{Maffeis:aiamb:thesis00,
 author =       {C{\'e}dric Fournet and Andrew D. Gordon and Sergio Maffeis},
  title =        {{A Type Discipline for Authorization in Distributed Systems}},
  booktitle = {CSF},
  year =         {2007},
series = "Springer"}

@InProceedings{howInheritance,
 author =       {Ewan Tempero and James Noble and Heyden Melton},
  title =        {{How do {J}ava Programmers use Inheritance?}},
  booktitle = {ECOOP},
  year =         {2008}}

@InProceedings{ddd,
 author =       {David Swasey and Deepak Garg and Derek Dreyer},
  title =        {{Robust and Compositional Verification of Object Capability Patterns}},
  booktitle = {OOPSLA},
  year =         {2017}}
  
@InProceedings{mao,
 author =       {Curtis Clifton and  Gary Leavens and James Noble},
  title =        {{Ownership and Effects for More Effective Reasoning About Aspects}},
  booktitle = {ECOOP},
  year =         {2007}}

@InProceedings{RelAspects,
 author =       {David J. Pierce and James Noble},
  title =        {{Relationship Aspects}},
  booktitle = {AOSD},
  year =         {2006}}

@InProceedings{multiple,
 author =       {Nicholas Cameron and Sophia Drossopoulou and James Noble and Matthew Smith},
  title =        {Multiple {O}ownership},
  booktitle = {OOPSLA},
  year =         {2007},
series = "ACM"}

@InProceedings{ownEncaps,
 author =       {David Clarke and Sophia Drossopoulou},
  title =        {Ownership, encapsulation and the disjointness of type and effect},
  booktitle = {OOPSLA},
  year =         {2002},
series = "ACM"}



@InProceedings{simpleOwnership,
  author = 	 {Clarke, David G. and Potter, John M. and Noble, James},
  title = 	 {Simple Ownership Types for Object Containment},
  booktitle = {{ECOOP}},
  year = 	 2001}

@inproceedings{ownaliasDONTUSE,
 author = {Clarke, David G. and Potter, John M. and Noble, James},
 title = {Ownership Types for Flexible Alias Protection},
 booktitle = {Proceedings of the 13th ACM SIGPLAN Conference on Object-oriented Programming, Systems, Languages, and Applications},
 series = {OOPSLA '98},
 year = {1998},
 isbn = {1-58113-005-8},
 location = {Vancouver, British Columbia, Canada},
 pages = {48--64},
 numpages = {17},
 url = {http://doi.acm.org/10.1145/286936.286947},
 doi = {10.1145/286936.286947},
 acmid = {286947},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {alias protection, containment, ownership, programming language design, representation exposure, sharing},
}

@InProceedings{tribe,
 author =       {David Clarke and Sophia Drossopoulou and James Noble and Tobias Wrigstad},
  title =        {{Tribe: More Types for Virtual Classes}},
  booktitle = {AOSD},
  year =         {2008},
series = "ACM"}


@InProceedings{existVar,
 author =       {Nicholas Cameron and Sophia Drossopoulou},
  title =        {Existential {Q}quantification for {V}ariant  {O}ownership},
  booktitle = {ESOP},
  year =         {2009}
  }



@inproceedings{murray10-infoflow,
  title = "Analysing the Information Flow Properties of Object-Capability Patterns",
  author = "Toby Murray and Gavin Lowe",
  year = "2010",
  booktitle = "FAST",
  series = "LNCS"
}

@inproceedings{JoeE,
  title = {{Joe-E a Security-Oriented Subset of Java}},
  author = "Adrian Mettler and David Wagner and Tyler Close",
  year = "2010",
  booktitle = "NDSS"
  }
  
 
@inproceedings{essence,
  title = "The {E}ssence of {J}ava{S}cript",
  author = "Arjun Guha and Claudiu Saftoiu and Shriram Krishnamurthi",
  year = "2010",
  booktitle = "ECOOP"
  }

@inproceedings{balto,
  title = "Maintaining Database integruty with refinement Types",
  author = "Ioannis G. Baltoplouls and Johannes Borgstrom and Andrew G. Gordon",
  year = "2011",
  booktitle = "ECOOP"
  }
  
  @inproceedings{reasonJS,
  title = {{Towards a program logic for JavaScript}},
  author = "Philippa Gardner and Sergio Maffeis and Gareth Smith",
  year = "2012",
  booktitle = "POPL"
  }
  
  @inproceedings{testing,
  title = {{Guiding dynamic symbolic execution toward unverified program executions}},
  author = "Maria Christakis and Pater Mueller and Valentin Wuestholz",
  year = "2016",
  booktitle = "ICSE"
  }
  
 @inproceedings{dafny,
 author = {K. R. Leino},
 title = {Dafny: An Automatic Program Verifier for Functional Correctness},
 booktitle = {LPAR16},
 year = {2010},
 month ={April},
 publisher = {Springer}
}
  
@inproceedings{Z3,
 author = {Leonardo De Moura and Nikolaj Bj{\o}rner},
 title = {Z3: an efficient SMT solver},
 booktitle = {TACAS},
 series = {ETAPS},
 year = {2008},
 publisher = {Springer}
}

@misc{ieeeStandard,
  AUTHOR        = {{IEEE Standards}},
  TITLE     = {Standards {C}oordinating {C}ommittee of the {C}omputer {S}ociety of the {IEEE}: {IEEE} {S}tandard {G}lossary of {S}oftware {E}ngineering {T}erminology},
 http= {\prg{{https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=\&arnumber=159342}}},
   year = {1990}
}
%HACK
%   note	= {prog.vub.ac.be/\textasciitilde{}tvcutsem/\-invokedynamic/\-js-membranes, and also http://tvcutsem.github.io/membranes},

@misc{RhoLang,
  AUTHOR        = {Lucius Gregory Meredith and Jack Petterson and Gary Stephenson and Michale Stay and Kent Shikama and Joseph Denman},
  TITLE     = {{C}ontracts, {C}omposition, and {S}caling} ,
 note	= {https://developer.rchain.coop/assets/rholang-spec-0.2.pdf},
   year = 2018
}


@misc{membranesJavascriptX,
  AUTHOR        = {Tom van Cutsem},
  TITLE     = {Membranes in {J}ava{S}cript} ,
 note	= {prog.vub.ac.be/\textasciitilde{}tvcutsem/\-invokedynamic/\-js-membranes},
   year = 2012
}


@phdthesis{murray10dphil,
  title = "Analysing the Security Properties of Object-Capability Patterns",
  author = "Toby Murray",
  year = "2010",
  school = "University of Oxford"
}


@inproceedings{enforcing,
title = "Enforceable Security Policies Revisited",
author = "David  Basin and Vincent Jug{\'e}  and Felix Klaedtke and Eugen Zalinescu",
year = "2012",
booktitle = "POST",
series = "ETAPS, LNCS"}

@inproceedings{monitoring,
title = "Monitoring security policies with metric first-order temporal logic",
author = "David Basin and  and Felix Klaedtke and Samuel M{\"{u}}ller",
year = "2010",
booktitle = "SACMAT"}



@phdthesis{MillerPhD,
  title = {{Robust Composition: Towards a Unified Approach to Access Control
and Concurrency Control}},
  author = "Mark Samuel Miller",
  year = "2006",
  school = "Baltimore, Maryland"
}

@misc{verifGrants,
    title="Verification and Correctness -  grants awarded between October 2005 and November 2010",
    author="EPSRC",
  note={www.epsrc.ac.uk/SiteCollectionDocuments/ourportfolio/}}
    }
    
@misc{lazy,
    title="The Lazy Programmer's Guide to Security",
    author="Marc Stiegler",
  note={HP Labs, {{www.object-oriented-security.org}}}
    }
    
   
    
    @misc{ecma,
    author="ECMA consortium",
    title="ECMAScript  2017 Language Specification",
    date= "June 2017",
    note="https://www.ecma-international.org/publications/standards/Ecma-262.htm"}


@TechReport{towardsCPSV,
    title={{Towards Capability Policy Specification and Verification}},
    author={Sophia Drossopoulou and James Noble},
    year= 2014,
    institution={School of Engineering and Computer Science, Victoria University of Wellington},
    number = {{ECSTR-14-05}},
  url=  {{https://ecs.victoria.ac.nz/Main/TechnicalReportSeries}}
  }
    
@inproceedings{ELang,
  AUTHOR        = {Mark Samuel Miller and Chip Morningstar and Bill Frantz},
  TITLE     = {{Capability-based Financial Instruments: From Object to Capabilities}} ,
   booktitle ={{Financial Cryptography}},
   year = 2000,
   publisher ={Springer}
}

@misc{Caja,
  AUTHOR        = {Mark Samuel Miller and Mike Samuel and Ben Laurie and Ihab Awad and Mike Stay},
  TITLE     = {{Safe active content in sanitized JavaScript}} ,
   note	= {{code.google.com/p/google-caja/}},
    year = 2008
}



@misc{SolidityCoin,
  AUTHOR        = {{Solidity Community}},
  TITLE     = {{Subcurrency Example}} ,
   note	= {{//solidity.}{readthedocs.io/en/develop/introduction-to-smart-contracts.html}}
}
%HACK note	= {{http://solidity.readthedocsio/en/develop/introduction-to-smart-contracts.html}},


@misc{SolidityModifier,
  AUTHOR  = {Solidity Community},
  TITLE     = {{Function Modifiers}} ,
   note	= {{http://solidity.readthedocs.io}{/en/develop/contracts.html\#function-modifiers}}
}

@misc{SolidityMultiSigJuly,
  AUTHOR        = {CodeTract},
  TITLE     = {{A look into Parity's Multisig Wallet bug affecting >\$100 million in Ether and tokens}} ,
   note	= {{https://medium.com/@codetractio/a-look-into-paritys-multisig-wallet-bug-affecting-100-million-in-ether-and-tokens-356f5ba6e90a}}
}

@misc{SolidityMultiSigNovember,
author = {MashableUK},
title = {{Wallet bug freezes more than \$150 million worth of Ethereum}},
note = {{http://mashable.com/2017/11/08/ethereum-parity-bug/\#7xEldv0f3mqP}}
}




@InProceedings{correspondence,
author= {Andrew D. Gordon and Alan Jeffrey},
title= {{Typing correspondence assertions for communication protocols}},
booktitle = {MFPS},
year = 2001,
  publisher =    {Elsevier, ENTCS}
}


 
@article{objSess,
author= {Mariangiola Dezani Ciancaglini and Sophia Drossopoulou and Dimitris Mostrous and Nobuko Yoshoda},
title= {{Objects and Session Types}},
journal = {{Information and Computation}},
year = 2009
}


@InProceedings{RolesStacksHistories,
author= {Johannes Borgstrom amd  Andrew D. Gordon and Riccardo Pucella},
title= {{Roles, Stacks, Histories: A Triple for Hoare}},
booktitle = {Reflections on the work of C.A.R. Hoare},
year = 2010,
editor = {C.B. Jones and A.W. Roscoe and K.R. Wood},
pages = {71--100},
  publisher =    {Springer}
}

@article{ownVerif,
author= {Werner M. Dietl and Peter M{\"{u}}ller},
title= {{Object Ownership in Program Verification}},
journal = {{Aliasing in Object-Oriented Programming}},
year = 2012
}

@article{existOwn,
author= {Nicholas Cameron and Sophia Drossopoulou and James Noble},
title= {{Ownership Types are Existential Types}},
journal = {{Aliasing in Object-Oriented Programming}},
year = 2012
}

@inproceedings{wild,
author= {Nicholas Cameron and Sophia Drossopoulou and Erik Ernst},
title= {{A Model for Java Wildcards}},
booktitle = {{ECOOP}},
year = 2008
}

@inproceedings{infJS,
author= {Christopher Anderson and Paola Giannini and Sophia Drossopoulou},
title= {{Type Inference for JavaScript}},
booktitle = {{ECOOP}},
year = 2005
}


@article{babyJ,
author= {Christopher Anderson and Sophia Drossopoulou},
title= {{BabyJ}: from object-based to class-based programming via types},
journal = {ENTCS},
year = 2003
}

@article{TasteOfCapsicum,
author= {R. N. M.  Watson and J.  Anderson and B. Laurie B. and K. Kennaway},
title= {A taste of Capsicum, practical capabilities for Unix},
journal = {Communications of the ACM},
year = 2012,
  publisher =    {ACM Press}
}

@misc{CAP,
author= {M. V. Wilkes and R. M. Needham},
title= {{The Cambridge CAP computer and its operating system}},
booktitle = {ACM symposium on Operating systems principles},
year = 1979,
  publisher =    {Elsevier North-Holland Inc, Amsterdam, the netherlands}
}

@article{Dennis66,
author= {Jack B. Dennis and Earl C. Van Horn},
title= {{Programming Semantics for Multiprogrammed Computations}},
journal = {Comm. ACM},
year = 1966,
volume = 9,
number = 3,
  publisher =    {ACM Press}
}

@article{Lampson76,
author= {Butler W. Lampson and Howard E. Sturgis},
title= {{Reflection on an Operating System Design}},
journal = {Communications of the ACM},
year = 1976,
volume = 19,
number = 5,
  publisher =    {ACM Press}
}

@inproceedings{verifast,
title = "VeriFast: A Powerful, Sound, Predictable, Fast Verifier for {C} and {J}ava - Invited Paper",
author = "Bart Jacobs and Jan Smans and Pieter Philippaerts and Frederic Vogels and Willem Penninckx and Frank Piessens",
year =  2011,
booktitle = "NFM"}



@InProceedings{MattAlexXXX,
    author = { Matthew Parkinson and Alexander J. Summers},
    title = {{The Relationship between Separation Logic and Implicit Dynamic Frames}},
    booktitle = {ESOP},
year = 2011
}

@InProceedings{Bauer07consumablecredentials,
    author = {Lujo Bauer and Kevin D. Bowers and Frank Pfenning and Michael K. Reiter},
    title = {Consumable Credentials in Logic-Based Access Control},
    booktitle = {Network and Distributed Systems Security Symposium},
year = 2007,
pages = {143--157},
  series =       LNCS,
  publisher =    {Springer}
}

@InProceedings{FeatherFirefox,
    author = {Aaron Bohannon and Benjamin Pierce},
    title = {{Featherweight Firefox - Formalizing the Core of a web browser}},
    booktitle = {{USENIX Security Symp.}},
year = 2010
}

@InProceedings{LinearLogicKnowledge,
    author = {Deepak Garg and Lujo Bauer and Kevin D. Bowers and Frank Pfenning and Michael K. Reiter},
    title = {A linear knowledge of authorization and knowledge},
    booktitle = {{ESoRICS}},
year = 2006,
  series =       LNCS,
  publisher =    {Springer}
}

@book{Java2Security,
    author = {Li Gong and G. Ellison and M. Dageforde},
    title = {{Inside the Java 2 platform security}},
    publisher = {Addison Wesley},
year = 2002}
 
@InProceedings{beyondTheSandbox,
    author = {Li Gong and Marianne Mueller and Hemma Prafullchandracand Roland Schemers},
    title = {{Going beyond the Sandbox: An Overview of the New Security Architecture in the Java Development Kit 1.2}},
    booktitle = {Usenix Network and Distributed Systems Security Symposium},
year = 1997}

 @inproceedings{mmt-oakland10,
    author= {S. Maffeis and J.C. Mitchell and A. Taly},
    title = {Object Capabilities and Isolation of Untrusted Web Applications},
    booktitle = "Proc of {IEEE Security and Privacy}",
    year = "2010"
}

@Unpublished{ooToSecurity,
  Author =   {Mark Samuel Miller},
  Title =    {{Secure Distributed Programming with Object-capabilities in JavaScript}},
  Month =    oct,
  Year =     2011,
  Note =     {Talk at Vrije Universiteit Brussel,
                  {{mobicrant-talks.eventbrite.com}}}
}

@inproceedings{usinghistory,
    author = {K. Rustan M. Leino and Wolfram Schulte},
    title = {Using History Invariants to Verify Observers},
    booktitle = {ESOP},
    year = {2007}
}

@Unpublished{newspeak,
  Author =   {{The Newspeak Team}},
  Title =    {{Several Newspeak Documents}},
  Month =    {September},
  Year =     2012,
  Note =     {{\tt {newspeaklanguage.org/}}}
}

@Unpublished{Ponzi,
  Author =   {{E. Banisadri}},
  Title =    {{How \$800k Evaporated from the PoWH Coin Ponzi Scheme Overnight}},
 Note =     {https://blog.goodaudience.com/ how-800k-evaporated-from-the-powh-coin-ponzi-scheme-overnight-1b025c33b530.},
   Month =    { },
   Year =     {  }
   }


@Unpublished{ERC20,
  Author =   {{The Ethereum Wiki}},
  Title =    {{ERC20 Token Standard}},
  url	= {https://theethereum.wiki/w/index.php/ERC20\_Token\_Standard},
  month = dec,
  year = 2018
   }

@Unpublished{Dao,
  Author =   {{Christoph Jentsch}},
  Title =    {Decentralized Autonomous Organization to automate governance},
  url =     {https://download.slock.it/public/DAO/WhitePaper.pdf},
   Month =    mar,
   Year =     2016
   }
   
  

@Unpublished{DaoBug,
  Author =   {{Coindesk}},
  Title = {Understanding The {DAO} Attack},
   Note =    {{www.coindesk}{.com}{/understanding-dao-hack-journalists/}},
   Year =     {2016}
   }
%    Month =    {June},  
%  HACK
% Note =    {{https://www.coindesk.com/understanding-dao-hack-journalists/}},
   

@Unpublished{multisigBugOne,
  Author =   {{Cointelegraph}},
  Title =    {{Ethereum Multisig Breach Continues Wreaking Havoc}},
 Note =     {https://cointelegraph.com/news/ethereum-multisig-breach-continues-wreaking-havoc},
   Month =    {July },
   Year =     {2017 }
   }
   
   @Unpublished{multisigBugTwo,
  Author =   {{Parity Technologies}},
  Title =    {{A Postmortem on the Parity Multi-Sig Library Self-Destruct}},
 Note =     {https://paritytech.io/a-postmortem-on-the-parity-multi-sig-library-self-destruct/},
   Month =    {November},
   Year =     {2017 }
   }

@Unpublished{dart,
  Author =   {{The Dart Team}},
  Title =    {{Dart Programming Language Specification}},
  Month =    {June},
  Year =     2012,
  Note =     { {\tt {www.dartlang.org/docs/spec/}}}
}

@Unpublished{holistic,
  Author =   {{S. Drossopoulou}},
  Title =    {{Holistic Specifications for Robust Code}},
  Month =    {July},
  Year =     2018,
  Note =     {Invited Talk at FTfJP and Codemesh, {//www.doc.ic.ac.uk/} {$\sim$scd/Holistic\_Specs.pdf}}
}
%   {https://www.doc.ic.ac.uk/$\sim$scd/Holistic\_Specs.WG2.3.pdf}}


@InProceedings{dynamicOwn,
    author = {Donald Gordon and James Noble},
    title = {{Dynamic Ownership in a Dynamic Language}},
    booktitle = {Dynamic Languages Symposium},
year = 2007,
   publisher =    "ACM"}
 
@Unpublished{Leavens-etal07,
  Author =   {G. T. Leavens and E. Poll and C. Clifton and Y. Cheon and C. Ruby and D. R. Cok and P. M{\"{u}}ller and J. Kiniry and P. Chalin},
  Title =    {{JML Reference Manual}},
  Month =    {February},
  Year =     2007,
  Note =     {Iowa State Univ. { {www.jmlspecs.org}}}
}

@article{staticsfull,
title		= {{A Universe-Type-Based Verification Technique for Mutable Static Fields and Methods}},
author		= {A. J. Summers and S. Drossopoulou and P. M{\"{u}}ller},
year		= {2009},
  Note =     {Journal of Object Technologies}
  }
 

@INPROCEEDINGS{ pubsdoc:staticINV,
booktitle	= {Formal techniques for {Java-like} Programming},
title		= {{A Universe-Type-Based Verification Technique for Mutable Static Fields and Methods (Work in Progress)}},
author		= {A. J. Summers and S. Drossopoulou and P. M{\"{u}}ller},
month		= {June},
year		= {2008},
url		= {http://pubs.doc.ic.ac.uk/staticINV/}}

@INPROCEEDINGS{initalization,
booktitle	= {{OOPSLA}},
title		= {{Freedom before Commitment -- a LIghtweight Type System for Object Initialization}},
author		= {Alexander John Summers and  Peter  M{\"{u}}ller},
year		= {2011}
}

@INPROCEEDINGS{famiglia,
booktitle	= {{OOPSLA}},
title		= {{Familia: Unifying Interfaces, Type Classes, and Family Polymorphism}},
author		= {Yizhou Zhang and Andrew C. Myers},
year		= {2017}
}

@InProceedings{DrossoFrancaMuellerSummers08,
 author = {S. Drossopoulou and A. Francalanza and P. M{\"u}ller and A. J. Summers},
 title = {A Unified Framework for Verification Techniques for Object Invariants},
 booktitle = {ECOOP},
 year = {2008},
 editor = {},
 series = LNCS,
 publisher = {Springer},
}

@INPROCEEDINGS{pubsdoc:invariants-iwaco09,
booktitle	= {IWACO},
title		= {{The need for Flexible Object Invariants}},
series		= {ACM DL},
author		= {Alexander J. Summers and Sophia Drossopoulou and Peter M{\"{u}}ller},
month		= {July},
year		= {2009}}

@INPROCEEDINGS{raceSafe,
booktitle	= {VAMP},
title		= {{Universe Types for Race Safety}},
author		= {David Cunningham and Sophia Drossopoulou and Susan Eisenbach},
year		= {2007}}


@ARTICLE{ pubsdoc:universe-types-encapsulation,
title		= {{Universe Types for Topology and Encapsulation}},
volume		= {5382},
ISBN		= {978-3-540-92187-5},
series		= {LNCS},
author		= {Cunningham, David and Dietl, Werner and Drossopoulou, Sophia and Francalanza, Adrian and M{\"{u}}ller, Peter and Summers, Alexander},
pages		= {72--112},
year		= {2008},
journal         = {FMCO}
}

@article{DietlMueller05,
 author = {Dietl, W. and M\"uller, P.},
 title = {Universes: Lightweight Ownership for {JML}},
 journal = {JOT},
 month = {October},
 year = {2005},
 optkey = {},
 volume = {4},
 number = {8},
 pages = {5--32},
 optannote = {},
 note = {},
}


@inproceedings{sliceProvenance,
 author = {Roly Perera and Umut Acar and James Cheney and Paul Blain Levy},
 title = {Functional programs that explain their work},
 booktitle = {ICFP},
 year = {2012},
 publisher = {ACM}
}
 
 @misc{boogie2,
title		= {{This is Boogie 2}},
author= {K. Rustan M. Leino},
year		= {2008} }

@INPROCEEDINGS{sipOfChalice,
title		= {{A Sip of the Chalice}},
booktitle = {FTFJP},
author		= {Azalea Raad and Sophia Drossopoulou},
month		= {July},
year		= {2011}}

@INPROCEEDINGS{trust,
title		= {{Trust the Clones}},
booktitle = {IWACO},
author		= {Dave Clarke and Sophia Drossopoulou and James Noble},
month		= {July},
year		= {2011}}

@INPROCEEDINGS{hybrid,
title		= {{Hybrid Typechecking}},
author		= {Cormac Flanagan},
booktitle = {POPL},
year		= {2006}}

@INPROCEEDINGS{grace,
title		= {{Grace: the Absence of (Inessential) Difficulty}},
author		= {Andrew Black and Kim Bruce and Michael Homer and James Noble},
booktitle = {Onwards},
year		= {2012}}



@INPROCEEDINGS{chalice,
title		= {{Verification of concurrent programs with Chalice}},
author		= {K Rustan M Leino and Peter M{\"{u}}ller},
booktitle = {ESOP},
year		= {2009}}


@INPROCEEDINGS{rolesForOwners,
booktitle	= {IWACO 2011},
title		= {{Roles for Owners - Work in Progress}},
series		= {ACM DL},
author		= {Sophia Drossopoulou and David Clarke and James Noble},
month		= {July},
year		= {2011}}


@InProceedings{LuPotPOPL06,
  author =   {Y. Lu and J. Potter},
  title =    {{P}rotecting {R}epresentation with {E}ffect
                  {E}ncapsulation.},
  booktitle =    {POPL},
  year =     {2006},
  pages =    {359-371}
}

@InProceedings{LuPotECOOP05,
  author =   {Yi Lu and John Potter},
  title =    {A {T}ype {S}ystem for {R}eachability and
                  {A}cyclicity},
  booktitle =    {ECOOP},
  year =     {2005},
  pages =    {479-503}
}

@InProceedings{LuPotECOOP06,
  author =   {Yi Lu and John Potter},
  title =    {{O}n {O}wnership and {A}ccessibility},
  booktitle =    {ECOOP},
  pages =    {99-123},
  year =     {2006}
}

@InProceedings{considerate,
  author =   {Alexander J. Summers and Sophia Drossopoulou},
  title =    {{Considerate Reasoning and the Composite Pattern}},
  booktitle = {VMCAI},
  year = {2010}
}

@InProceedings{LuPotECOOP07,
  author =   {Y. Lu and J. Potter and J. Xue},
  title =    {{O}bject {I}nvariants and {E}ffects},
  booktitle = {ECOOP},
  year = {2007},
  editor =  {},
  series =   LNCS,
  publisher =    {Springer},
  volume = {4609},
  pages = {202--226}
}


@TechReport{PotNobClaBidOOPSLA06,
  author =       {Alex Potanin and James Noble and Dave Clarke and
                  Robert Biddle},
  title =        {{G}eneric {O}wnership for {G}eneric {J}ava},
  institution =  {University of Wellington, Victoria},
  year =         2006,
  number =       {CS-TR-03-16}
}

@InProceedings{VitECOOP06,
  author =   {Chris Andreae and Yvonne Coady and Celina Gibbs and
                  James Noble and Jan Vitek and Tian Zhao},
  title =    {{S}coped {T}ypes and {A}spects for {R}eal-{T}ime
                  {J}ava},
  booktitle =    {ECOOP},
  pages =    {124-147},
  year =     {2006}
}


@InProceedings{dpj,
  author =   {R. Bocchino and S. Heumann and N. Honarmand and S. Adve and V. Adve and A. Welc and T. Shpeisman},
  title =    {{Safe Nondeterminism in a Deterministic-by-Default Parallel Language}},
  booktitle =    {POPL},
  year =     {2011}
}


@InProceedings{MitECOOP06,
  author =   {Nick Mitchell},
  title =    {{T}he {R}untime {Structure} of {O}bject {O}wnership},
  booktitle =    {ECOOP},
  pages =    {74-98},
  year =     {2006}
}

@inproceedings{dd,
  author    = {Dominique Devriese and
               Lars Birkedal and
               Frank Piessens},
  title     = {Reasoning about Object Capabilities with Logical Relations and Effect
               Parametricity},
  booktitle = {{IEEE} EuroS{\&}P},
  pages     = {147--162},
  year      = {2016},
  doi       = {10.1109/EuroSP.2016.22}
}
% HACK
  % European Symposium on Security and Privacy, EuroS{\&}P
%               2016, Saarbr{\"{u}}cken, Germany, March 21-24, 2016},

 


@inproceedings{hypervisor,
 author = {Dirk Leinenbach  and Thomas Santen},
 title ={ {Verifying the Microsoft Hyper-V Hypervisor with VCC}},
 booktitle = {Formal Methods},
 year = {2009},
  publisher = {Springer}
}

@inproceedings{BoyLisShrPOPL03,
 author = {Chandrasekhar Boyapati and Barbara Liskov and Liuba Shrira},
 title = {Ownership types for object encapsulation},
 booktitle = {POPL '03: Proceedings of the 30th ACM SIGPLAN-SIGACT symposium on Principles of programming languages},
 year = {2003},
 isbn = {1-58113-628-5},
 pages = {213--223},
 location = {New Orleans, Louisiana, USA},
 doi = {http://doi.acm.org/10.1145/604131.604156},
 publisher = {ACM Press},
 address = {New York, NY, USA},
 }


@misc{membranes,
    author = {Yves Jaradin and Fred Piessens and Peter Van Roy},
    title = {Capability Confinement by Membranes},
    year = {2005},
    note={{TR} {Universit{\'e} Catholique De Louvain}}
}

@TECHREPORT{server,
    author = {M. Zlewski},
    title = {{Browser Security Handbook}},
    institution = {Google Inc.},
    year = {2008},
    note={{code.google.com/p/browsersec/wiki/Part2}}
}


@book{GosJoySteBra00,
    author = "James Gosling and Bill Joy and Guy Steele and Gilad Bracha",
    title = "The {Java} Language Specification Second Edition",
    publisher = "Addison-Wesley",
    address = "Boston, Mass.",
    isbn = "0-201-31008-2",
    year = "2000",
    url = "citeseer.ist.psu.edu/gosling00java.html" }

@book{modula2,
    author = {Niklaus Wirth},
    title = "Programming in Modula-2",
    publisher = "Springer",
    year = "1982"}
    
 @book{cpp,
    author = {Bjarne Stroustrup},
    title = "The C++ Programming Language",
    publisher = "Addison Wesley",
    year = "1986"}

@article{refinementForSecure,
 author = {Jesper Bengtson and Kathiekeyan Bhargavan and Cedric Fournet and Andrew Gordon and S.Maffeis},
 title = {{Refinement Types for Secure Implementations}},
 journal = {ACM ToPLAS},
 year = {2011},
 doi = "10.1109/CSF.2008.27"
  }


   
@article{IgaPieWadTOPLAS01,
 author = {Atsushi Igarashi and Benjamin C. Pierce and Philip Wadler},
 title = {Featherweight {Java:} a minimal core calculus for Java and GJ},
 journal = {ACM ToPLAS},
 volume = {23},
 number = {3},
 year = {2001},
 issn = {0164-0925},
 pages = {396--450},
 doi = {http://doi.acm.org/10.1145/503502.503505},
 address = {New York, NY, USA},
 }

@inproceedings{FlaQadTLDI03,
 author = {Cormac Flanagan and Shaz Qadeer},
 title = {Types for atomicity},
 booktitle = {TLDI},
 year = {2003},
 isbn = {1-58113-649-8},
 pages = {1--12},
 location = {New Orleans, Louisiana, USA},
 doi = {http://doi.acm.org/10.1145/604174.604176},
 publisher = {ACM Press},
 address = {New York, NY, USA},
 }

@inproceedings{BerHonYos05,
 author = {Martin Berger and Kohei Honda and Nobuko Yoshida},
 title = {A logical analysis of aliasing in imperative higher-order functions},
 booktitle = {ICFP},
 year = {2005},
 isbn = {1-59593-064-7},
 pages = {280--293},
 location = {Tallinn, Estonia},
 doi = {http://doi.acm.org/10.1145/1086365.1086401},
 publisher = {ACM Press},
 address = {New York, NY, USA},
 }

@inproceedings{Zdancewic:Myers:01,
 author = {Steve Zdancewic  and Andrew C. Myers},
 title = {Secure Information Flow and CPS},
 booktitle = {Proceedings of the 10th European Symposium on Programming Languages and Systems},
 series = {ESOP '01},
 year = {2001},
 isbn = {3-540-41862-8},
 pages = {46--61},
 numpages = {16},
 url = {http://dl.acm.org/citation.cfm?id=645395.651931},
 acmid = {651931},
 publisher = {Springer},
 address = {London, UK, UK},
}

@inproceedings{BAN,
 author = {Michael Burrows and Martin Abadi and Roger Needham},
 title = {{A Logic of Authentication}},
 booktitle = {Twelfth Symposium on Operating System Principles},
 year = {1989}
}

@article{Denning76,
 author = {Denning, Dorothy E.},
 title = {A lattice model of secure information flow},
 journal = {Commun. ACM},
 issue_date = {May 1976},
 volume = {19},
 number = {5},
 month = may,
 year = {1976},
 issn = {0001-0782},
 pages = {236--243},
 numpages = {8},
 url = {http://doi.acm.org/10.1145/360051.360056},
 doi = {10.1145/360051.360056},
 acmid = {360056},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {information flow, lattice, program certification, protection, security, security class},
}




@inproceedings{Smith06,
 author    = {Matthew Smith},
 title     = {{T}owards an {E}ffects {S}ystem for {O}wnership {D}omains},
 booktitle = {FTfJP 2006},
 year      = {2006},
 url       = {http://slurp.doc.ic.ac.uk/pubs.html}
}


@InProceedings{NobPotVitECOOP98,
  author =       "James Noble and John Potter and Jan Vitek",
  title =        "Flexible Alias Protection",
  booktitle =    "ECOOP",
  month =        Jul,
  year =         1998,
}

@inproceedings{SmiDroIWACO03,
 author    = {Matthew Smith and Sophia Drossopoulou},
 title     = {Cheaper {R}easoning with {O}wnership {T}ypes},
 booktitle = {IWACO},
 year      = {2003},
 url       = {http://www.cs.uu.nl/~dave/iwaco/}
}


@inproceedings{atomic,
 author = {C. Flanagan and S. Qadeer},
 title     = {A {T}ype and {E}ffect  {S}ystem for {A}tomicity},
 year      = {2003},
 booktitle = {PLDI},
 pages = {338--349},
 publisher = {ACM Press}
}

@inproceedings{capsForSharing,
 author = {John Boyland and James Noble and William Retert},
 title     = {{C}apabilities for {S}haring},
 year      = {2001},
 booktitle = {ECOOP},
 publisher = {Springer}
}

@inproceedings{ParBiePOPL05,
 author = {M. Parkinson and G. Bierman},
 title = {Separation logic and abstraction},
 booktitle = {POPL},
 year = {2005},
 pages = {247--258},
 publisher = {ACM Press}
}

@inproceedings{jStar,
 author = {Dino DiStefano and Matthew J. Parkinson},
 title = {j{S}tar: {T}owards practical verification for {J}ava},
 booktitle = {OOPSLA},
 year = {2008},
 publisher = {ACM Press}
}


@inproceedings{ParBiePOPL08,
 author = {M. Parkinson and G. Bierman},
 title = {Separation Logic, Abstraction and Inheritance},
 booktitle = {POPL},
 year = {2008},
 publisher = {ACM Press},
 pages = {75--86}
}


@inproceedings{ChinPOPL08,
 author = {W.-N. Chin and C. David and H. H. Nguyen and S. Qin},
 title = {Enhancing Modular {OO} Verification with Separation Logic},
 booktitle = {POPL},
 year = {2008},
 pages = {87--99},
 publisher = {ACM Press}
}

@inproceedings{Parkinson07,
 author = {Matthew Parkinson},
 title = {Class Invariants: the end of the Road?},
 booktitle = {IWACO},
 year = {2007}
}

@inproceedings{ BoyLeeRinOOPSLA02,
  author = "C. Boyapati and R. Lee and M. Rinard",
  title = "Ownership types for safe programming: Preventing data races and deadlocks",
  booktitle = "OOPSLA",
  month = nov,
  year = "2002",
  url = "citeseer.ist.psu.edu/boyapati02ownership.html" }

@inproceedings{DieMueFTJP04,
 author = {Dietl, W. and M\"{u}ller, P.},
 title = {Exceptions in Ownership Type Systems},
 booktitle = {Formal Techniques for {J}ava-like Programs},
 year = {2004},
 editor = {E. Poll},
 pages = {49--54}
}

@inproceedings{BarLeiSch05,
author = {Barnett, Mike and Leino, Rustan and Schulte, Wolfram},
title = {The Spec$\sharp$ Programming System: An Overview},
series = {Lecture Notes in Computer Science},
booktitle = {CASSIS 2004, Construction and Analysis of Safe, Secure and Interoperable Smart devices},
year = {2005},
month = {January},
abstract = {The Spec# programming system is a new attempt at a more cost effective way to develop and maintain high-quality software. This paper describes the goals and architecture of the Spec# programming system, consisting of the object-oriented Spec# programming language, the Spec# compiler, and the Boogie static program verifier. The language includes constructs for writing specifications that capture programmer intentions about how methods and data are to be used, the compiler emits run-time checks to enforce these specifications, and the verifier can check the consistency between a program and its specifications.},
publisher = {Springer},
url = {https://www.microsoft.com/en-us/research/publication/the-spec-programming-system-an-overview/},
pages = {49-69},
volume = {3362},
edition = {CASSIS 2004, Construction and Analysis of Safe, Secure and Interoperable Smart devices},
doi="10.1007/978-3-540-30569-9_3"
}

@article{BarDelFahLeiSch04,
 author = "M. Barnett and R. DeLine and M. F{\"a}hndrich and K. R. M. Leino and
    W. Schulte",
  title = "Verification of object-oriented programs with invariants",
 journal = {JOT},
 year = {2004},
 volume = {3},
 number = {6},
 pages = {27--56}
}

@InProceedings{BarnettNaumann04,
  author =       {Barnett, M. and Naumann, D.},
  title =        {Friends Need a Bit More: Maintaining
  Invariants Over Shared State},
  booktitle =    {MPC},
   year =         2004,
  series =       LNCS
}

@inproceedings{LeinoMueller04,
 author = {Leino, K. R. M. and M\"uller, P.},
 title = {Object Invariants in Dynamic Contexts},
 booktitle = {ECOOP},
 year = {2004},
 editor = {},
 series = LNCS,
 volume = {3086},
 publisher = {Springer},
 pages = {491--516},
}


@inproceedings{FinFel01,
 author = {Robert Bruce Findler and Matthias Felleisen},
 title = {Contract Soundness for object-oriented languages},
 booktitle = {Object-oriented programming, systems, languages, and applications (OOPSLA)},
 year = {2001},
 isbn = {1-58113-335-9},
 pages = {1--15},
 location = {Tampa Bay, FL, USA},
 doi = {http://doi.acm.org/10.1145/504282.504283},
 publisher = {ACM Press}
 }



@book{Mey88,
 author = {B. Meyer},
 title = {Object-Oriented Software Construction},
 year = {1988},
 publisher = {Prentice-Hall}
 }

@book{Meyer92,
AUTHOR          = { Meyer, B. },
TITLE           = { Eiffel: The Language },
PUBLISHER       = { Prentice Hall },
YEAR            = 1992
}

@article{MeyerDBC92,
  author    = {Bertrand Meyer},
  title     = {Applying "Design by Contract"},
  journal   = {Computer},
  volume    = {25},
  number    = {10},
  pages     = {40--51},
  year      = {1992},
  Xurl       = {https://doi.org/10.1109/2.161279},
  Xdoi       = {10.1109/2.161279},
  Xtimestamp = {Wed, 12 Aug 2020 10:29:00 +0200},
  Xbiburl    = {https://dblp.org/rec/journals/computer/Meyer92.bib},
  Xbibsource = {dblp computer science bibliography, https://dblp.org}
}

@book{Meyer97,
  AUTHOR       = { Meyer, B. },
  TITLE        = { Object-Oriented Software Construction, Second Edition},
  PUBLISHER    = { Prentice Hall },
  edition =      { Second },
  YEAR         = 1997
}


@Unpublished{DieDroMue07,
  author =   {Dietl, W. and Drossopoulou S. and M\"uller, P. },
  title =    {Generic Universe Types},
  note =     {{FOOL/WOOD'07}},
  OPTkey =   {},
  month =    {Jan},
  year =     {2007},
  OPTannote =    {}
}

@article{DieDroMue11,
  author =   {Werner Dietl and Sophia Drossopoulou and Peter M\"uller },
  title =    {Generic Universe Types, Separating Topology from Encapsulation},
  journal =     {{ToPLaS}},
  year =     {2011}
}

@inproceedings{LeavensMueller07,
 author = {G. T. Leavens and P. M{\"u}ller},
 title = {Information Hiding and Visibility in Interface Specifications},
 year = {2007},
 booktitle = {ICSE},
 pages = {385--395},
 publisher = {IEEE}
}


@inproceedings{LeinoMueller06,
 author = {Leino, K. R. M. and M\"uller, P.},
 title = {A verification methodology for model fields},
 booktitle = {ESOR},
 editor = { },
 volume = {3924},
 pages = {115--130},
 year = {2006},
 series = LNCS,
 publisher = {Springer },
}

@article{MidHuiKuiLui2006,
    author = "R. Middelkoop and C. Huizing and R. Kuiper and E. J. Luit",
    title = "Invariants for Non-Hierarchical Object Structures",
  journal   = {Electr. Notes Theor. Comput. Sci.},
  volume    = {195},
  year      = {2008},
  pages     = {211--229}
}






@TechReport{Jones91,
  author =       {Jones, K. D.},
  title =        {{LM3}: A {L}arch Interface Language
  for {M}odula-3: A \sds{Definition} and Introduction},
  institution =  "Digital Equipment Corporation, Systems Research Center",
  year =         1991,
  number =       72
}



@inproceedings{HaehnleMostowski05,
 author = {R. H{\"a}hnle  and W. Mostowski},
 title = {Verification of Safety Properties in the Presence of Transactions},
 booktitle = {CASSIS},
 editor = {},
 volume = {3362},
 pages = {151--171},
 year = {2005},
 series = LNCS,
 publisher = {}
}

@Article{Hoare72,
  author =       {Hoare, C. A. R.},
  title =        "Proofs of Correctness of Data Representation",
  journal =      "Acta Informatica",
  year =         1972,
  volume =       1,
  pages =        "271--281"
}

@Article{Hoare69,
  author = {Hoare, C. A. R.},
  title =   "An Axiomatic Basis for Computer Programming",
  journal =      "Comm. ACM",
  year =         1969,
  volume =       12,
  pages =        "576--580"
}

@Article{Hoare74,
  Author =   "C. A. R. Hoare",
  Title =    "Monitors: an operating system structuring concept",
  Journal =  "Commun. ACM",
  Year =     1974,
  Volume =   17,
  Number =   10,
  Pages =    "549--557"
}

@article{liskov94behavioral,
   author = {B. Liskov and J. Wing},
   title = {A Behavioral Notion of Subtyping},
   journal = {ACM ToPLAS},
   volume = {16},
   number = {6},
   pages = {1811--1841},
   year = {1994}
}

@Book{LiskovGuttag86,
  Author="Liskov, B. and Guttag, J.",
  Title="Abstraction and Specification in Program Development",
  Year=1986,
  Publisher={MIT Press}
}



@PhdThesis{Boyapati04,
  author =       {Boyapati, C.},
  title =        {{SafeJava:} A Unified Type System for Safe Programming},
  school =       {MIT},
  year =         2004,
  url =         "pmg.lcs.mit.edu/~chandra/publications/"
}

@InProceedings{LeinoSchulte07,
  author =       {Leino, K. R. M. and Schulte, W.},
  title =        {Using history invariants to verify observers},
  booktitle =    { ESOP },
  year =         2007,
  publisher = {Springer},
  series    = LNCS,
  editor =   { },
  volume =   4421,
  pages =    {316--330}
}


@InProceedings{DietlDrossopoulouMueller07a,
   author =      {W. Dietl and S. Drossopoulou and P. M{\"u}ller},
   title =       {{G}eneric {U}niverse {T}ypes},
  booktitle =    { ECOOP },
  year =     {2007},
  editor =   { },
  series =   LNCS,
  publisher =    {Springer },
  url =          {http://www.springerlink.com},
  urltext =      {Springer-Online},
  volume = {4609},
  pages = {28--53}
}


@PHDTHESIS{Leino95a,
AUTHOR = {Leino, K. R. M.},
TITLE = {Toward Reliable Modular Programs},
SCHOOL = {California Institute of Technology},
YEAR = 1995
}



@Book{GoslingEA05,
  author =       {Gosling, J. and Joy, B. and Steele, G. and Bracha, G.},
  title =        {The {J}ava Language Specification (3rd Edition)},
  publisher =    {Addison-Wesley},
  year =         2005
}

@inproceedings{FaehndrichXia07,
 author = {M. F\"ahndrich and S. Xia},
 title = {Establishing Object Invariants with Delayed Types},
 booktitle = { OOPSLA },
 year = {2007},
 pages = {337--350},
 publisher = {ACM Press}
}

@INPROCEEDINGS{JacobsEA05,
  AUTHOR =       {B. Jacobs and K. R. M. Leino and F. Piessens and W. Schulte},
  TITLE =        {Safe Concurrency for Aggregate Objects with Invariants},
  BOOKTITLE =    {Software Engineering and Formal Methods (SEFM)},
  year =         {2005},
  publisher =    {IEEE Computer Society},
  pages =        {137--146}
}

@book{Mueller02,
 author = {M{\"u}ller, P.},
 title = {Modular Specification and Verification of Object-Oriented Programs},
 publisher = {Springer},
 series = LNCS,
 volume = {2262},
 year = {2002}
}

% Saltzer, Jerome H. (1974). "". Communications of the ACM 17 (7): 389.

%thank you Wikipedia - http://en.wikipedia.org/wiki/Principle_of_least_privilege

@Article{pola,
  author = 	 {Jerome H. Saltzer},
  title = 	 {Protection and the control of information sharing in {M}ultics},
  journal = 	 {{CACM}},
  year = 	 1974,
  volume = 	 17,
  number = 	 7,
  pages = 	 {p.389ff}}



@InProceedings{needham,
  author = 	 {Roger Needham},
  title = 	 {Protection systems and protection implementations},
  booktitle = {Joint Computer Conference},
  pages = 	 {571-578},
  year = 	 1972}

@InProceedings{aliasICSE2013,
  author = 	 {Alex Potanin and Monique Damitio and James Noble},
  title = 	 {Are Your Incoming Aliases Really Necessary? {C}ounting the Cost of Object Ownership},
  booktitle = {{ICSE}},
  year = 	 2013}


@InProceedings{jsand2012,
  author = 	 {Pieter Agten and Steven Van Acker and Yoran Brondsema and Phu H. Phung and Lieven Desmet and Frank Piessens},
  title = 	 {{JSand:} Complete Client-Side Sandboxing of Third-Party {JavaScript} without Browser Modifications},
  booktitle = {{ACSAC}},
  year = 	 2012}

@InProceedings{capeFTfJP,
  author = 	 {Sophia Drossopoulou and James Noble},
  title = 	 {The Need for Capability Policies},
  booktitle = {{(FTfJP)}},
  year = 	 2013}
  
  @InProceedings{iFM2014,
  author = 	 {Sophia Drossopoulou and James Noble},
  title = 	{{How to Break the Bank: Semantics of Capability Policies}},
  booktitle = {{International Conference on Integrated Formal Methods}},
  year = 	 2014}

 @InProceedings{FTfJP14,
  author = 	 {James Noble and Sophia Drossopoulou},
  title = 	 {A Rational reconstruction of the Escrow Example},
  booktitle = {{(FTfJP)}},
  year = 	 2014}
  
  @InProceedings{permissionAuthority,
  author = 	 {Sophia Drossopoulou and James Noble and Mark Miller and Toby Murray},
  title = 	 {Permission and Authority revisited -- towards a formalization},
  booktitle = {{(FTfJP)}},
  year = 	 2016}

 @InProceedings{swapsies,
  author = 	 {Sophia Drossopoulou and James Noble and Mark Miller},
  title = 	 {Swapsies on the Internet:  First Steps towards Reasoning about Risk and Trust in an Open World},
  booktitle = {{(PLAS)}},
  year = 	 2015}
  
 @InProceedings{attenuation,
  author = 	 {Shu-Peng Loh and Sophia Drossopoulou},
  title = 	 {Specifying Attenuation},
  booktitle = {{(OCAP)}},
  year = 	 2017}
 
  
@InProceedings{DefJS,
  author = 	 {Karthikeyan Bhargavan and Antoine Delignat-Lavaud
                  and Sergio Maffeis},
  title = 	 {Language-based Defenses against Untrusted Browser Origins},
  booktitle = {{USENIX} Security},
  year = 	 2013}


@InProceedings{FeaturesVSOCs,
  author = 	 {Salman Saghafi and Kathi Fisler and Shriram Krishnamurthi},
  title = 	 {Features and Object Capabilities: Reconciling Two Visions of Modularity},
  booktitle = {{AOSD}},
  year = 	 2012}

@InProceedings{badbeans,
   author =   {D. Clarke and M. Richmond and J. {{Noble}}},
   title =    {Saving the World from Bad Beans},
    booktitle = {OOPSLA},
   year =     2003
}


@InProceedings{jeeves2012,
  author = 	 {Jean Yang and Kuat Yessenov and Armando Solar-Lezama},
  title = 	 {A Language for Automatically Enforcing Privacy Policies},
  booktitle = {{POPL}},
  year = 	 2012}


@article{sabelfeld-inlining2012,
  author    = {Jonas Magazinius and
               Alejandro Russo and
               Andrei Sabelfeld},
  title     = {On-the-fly inlining of dynamic security monitors},
  journal   = {Computers {\&} Security},
  volume    = {31},
  number    = {7},
  year      = {2012},
  pages     = {827-843}
}


@InProceedings{miller-esop2013,
  author = 	 {Mark S. Miller and Tom Van Cutsem and Bill Tulloh},
  title = 	 {Distributed Electronic Rights in {JavaScript}},
  booktitle = {{ESOP}},
  year = 	 2013}


@InProceedings{flowcaps11,
  author = 	 {Arnar Birgisson and Alejandro Russo and Andrei Sabelfeld},
  title = 	 {Capabilities for information flow},
  booktitle = {Programming Languages and Analysis for Security (PLAS)},
  year = 	 2011}
  
 @article{infoflow,
  author = 	 {Andrei Sabelfeld and Andrew C. Myers},
  title = 	 {Language-Based Information-Flow Security.},
   journal = {IEEE Journal on Selected Areas in Communications},
  year = 	 20011}

@Misc{PolicyAsTypes,
  author = 	 {Meredith, L.G. and Mike Stay and Sophia Drossopoulou},
  title = 	 {Policy as Types},
  howpublished = {{arXiv:1307.7766 [cs.CR]}},
  month = 	 jul,
  year = 	 2013}


@INPROCEEDINGS{ADsafety,
author = {Joe Gibbs Politz and Spiridon Aristides Eliopoulos and Arjun Guha and Shriram Krishnamurthi},
title = {{ADsafety}: Type-Based Verification of {JavaScript} Sandboxing},
booktitle = {USENIX Security},
year = {2011},
}

@INPROCEEDINGS{Lerner2013b,
  author = {Benjamin S. Lerner and Liam Elberty and Neal Poole
            and Shriram Krishnamurthi},
  title = {Verifying Web Browser Extensions' Compliance with
           Private-Browsing Mode},
  booktitle = {European Symposium on Research in
               Computer Security (ESORICS)},
  year = {2013},
  month = sep
}


@inproceedings{Gardner12,
  author    = {Philippa Gardner and
               Sergio Maffeis and
               Gareth David Smith},
  title     = {Towards a program logic for {JavaScript}},
  booktitle = {POPL},
  year      = {2012}
}


@PhdThesis{XiongPhd,
  author = 	 {Xiong, Wei},
  title = 	 {Verification and Validation of JavaScript},
  school = 	 2013,
  year = 	 {Durham University}}


@inproceedings{Qin11,
  author    = {Shengchao Qin and
               Aziem Chawdhary and
               Wei Xiong and
               Malcolm Munro and
               Zongyan Qiu and
               Huibiao Zhu},
  title     = {Towards an Axiomatic Verification System for {JavaScript}},
  booktitle = {TASE},
  year      = {2011},
  pages     = {133-141}
}


@InProceedings{Quark,
  author = 	 {Dongseok Jang and Zachary Tatlock and Sorin Lerner},
  title = 	 {Establishing Browser Security Guarantees through Formal Shim Verification},
  booktitle = {{USENIX} Security},
  year = 	 2012}


@inproceedings{JSDijkstraMonad,
  author    = {Nikhil Swamy and
               Joel Weinberger and
               Cole Schlesinger and
               Juan Chen and
               Benjamin Livshits},
  title     = {Verifying higher-order programs with the Dijkstra monad},
  booktitle = {PLDI},
  year      = 2013,
  pages     = {387-398}
}

@inproceedings{DPCC14,
  author = 	 {Christos Dimoulas and Scott Moore and Aslan Askarov and Stephen Chong},
  title = 	 {Declarative Policies for Capability Control},
  year = 2014,
  booktitle = {Computer Security Foundations Symposium {(CSF)}}
}


@inproceedings{FlacJS,
  author    = {Gregor Richards and
               Christian Hammer and
               Francesco Zappa Nardelli and
               Suresh Jagannathan and
               Jan Vitek},
  title     = {Flexible access control for {JavaScript}},
  booktitle = {OOPSLA},
  year      = {2013},
  pages     = {305-322}
}



%%%%%%%%%%%%%%%%%%%% NEW ONES  %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

@inproceedings{immut,
  author    = {A. Birka and M.D. Ernst},
  title     = {A practical type system and language for reference immutability},
  booktitle = {OOPSLA},
  year      = {2004}
}
 

@misc{escrow:Solidity,
  AUTHOR        = {James Sangalli},
  TITLE     = {Escrow contract in Solidity} ,
  url = {https://github.com/James-Sangalli/Solidity/blob/master/contracts/misc/escrow.sol},
   year = 2017
}

@misc{etherium:Purse,
  AUTHOR        = {{Solidity team}},
  TITLE     = {Introduction to Smart Contracts} ,
   url	= {http://solidity.readthedocs.io/en/develop/introduction-to-smart-contracts.html},
   year = 2017
}

@misc{contracts:as:escrow:Solidity,
  AUTHOR        = {{Solidity team}},
  TITLE     = {Two party contracts - Contracts as Escrow} ,
  url	= {https://dappsforbeginners.wordpress.com/tutorials/two-party-contracts/},
   year = 2017
}

@misc{cwe,
  AUTHOR        = {{Mitre Organisation}},
  TITLE     = {{CWE-830: Inclusion of Web Functionality from an Untrusted Source}} ,
   url	= {https://cwe.mitre.org/data/definitions/830.html},
   year = {2019},
}

@misc{consbreeched,
  AUTHOR        = {{Mattha Busby andJim Waterson and Michael Savage}},
  TITLE     = {{Major security flaw in Tory conference app reveals users' data}} ,
   url	= {https://www.theguardian.com/politics/2018/sep/29/tory-conference-app-flaw-reveals-private-data-of-senior-mps},
   day = {29},
   month = {Sept},
   year = {2018},
}
 
@Book{PandP,
  author = 	 {Jane Austen},
  title = 	 {Pride and Prejudice},
  publisher = 	 {T.\ Egerton, Whitehall},
  year = 	 1813}

	  

@Book{gof,
  author = 	 "Erich Gamma and Richard Helm and Ralph E. Johnson
		  and John Vlissides",
  title = 	 "Design Patterns",
  subtitle = "Elements of Reusable Object-Oriented Software",
  xpublisher = 	 "Addison-Wesley",
  year = 	 "1994"
}

 @inproceedings{ghost,
  author    = {Patrice Chalin and
               Joseph R. Kiniry and
               Gary T. Leavens and
               Erik Poll},
  title     = {Beyond Assertions: Advanced Specification and Verification with {JML}
               and ESC/Java2},
  booktitle = {Formal Methods for Components and Objects, 4th International Symposium,
               {FMCO} 2005, Amsterdam, The Netherlands, November 1-4, 2005, Revised
               Lectures},
  pages     = {342--363},
  year      = {2005},
  url       = {https://doi.org/10.1007/11804192\_16},
}		

@misc{examples,
  title = {Holistic Specifications paper with appendices},
  howpublished =  {\url{https://arxiv.org/abs/2002.08334}},
  XXURL = {\url{https://www.dropbox.com/s/l7ztnlyugm0\-weio\-/\-examples.pdf?dl=0}},
  note ={Accessed: 2020-02-21}
}

@misc{coqFASE,
  author       = {Drossopoulou, Sophia and
                  Noble, James and
                  Mackay, Julian and
                  Eisenbach, Susan},
  title        = {{Holisitic Specifications for Robust Programs - Coq 
                   Model}},
  year         = 2020,
  publisher    = {Zenodo},
  doi          = {10.5281/zenodo.3677621},
}

@article{IncorrectnessLogic,
author = {O'Hearn, Peter W.},
title = {Incorrectness Logic},
year = {2019},
issue_date = {January 2020},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {4},
number = {POPL},
url = {https://doi.org/10.1145/3371078},
doi = {10.1145/3371078},
abstract = {Program correctness and incorrectness are two sides of the same coin. As a programmer, even if you would like to have correctness, you might find yourself spending most of your time reasoning about incorrectness. This includes informal reasoning that people do while looking at or thinking about their code, as well as that supported by automated testing and static analysis tools. This paper describes a simple logic for program incorrectness which is, in a sense, the other side of the coin to Hoare's logic of correctness.},
journal = {Proc. ACM Program. Lang.},
month = dec,
articleno = {10},
numpages = {32},
keywords = {none}
}

@InProceedings{reverseHoare,
author="de Vries, Edsko
and Koutavas, Vasileios",
editor="Barthe, Gilles
and Pardo, Alberto
and Schneider, Gerardo",
title="Reverse Hoare Logic",
booktitle="Software Engineering and Formal Methods",
year="2011",
publisher="Springer Berlin Heidelberg",
address="Berlin, Heidelberg",
pages="155--171",
abstract="We present a novel Hoare-style logic, called Reverse Hoare Logic, which can be used to reason about state reachability of imperative programs. This enables us to give natural specifications to randomized (deterministic or nondeterministic) algorithms. We give a proof system for the logic and use this to give simple formal proofs for a number of illustrative examples. We define a weakest postcondition calculus and use this to show that the proof system is sound and complete.",
isbn="978-3-642-24690-6"
}



  

@Article{Lamport77,
  author = 	 {Leslie Lamport},
  title = 	 {Proving the Correctness of Multiprocess Programs},
  journal = 	 {{TSE}},
  year = 	 1977,
  volume = 	 {{SE-}3},
  number = 	 2,
  pages = 	 {125--143},
  month = 	 mar}


@Article{incorrect,
  author = 	 {Peter W. O'Hearn},
  title = 	 {Incorrectness Logic},
  journal = 	 {{PACMPL}},
  volume    = 4,
  number    = {{POPL}},
  pages     = {10:1--10:32},
  year      = 2020}



@inproceedings{Rinard03,
  author    = {Martin C. Rinard},
  Xeditor    = {Ron Crocker and
               Guy L. Steele Jr.},
  title     = {Acceptability-oriented computing},
  Xbooktitle = {Companion of the 18th Annual {ACM} {SIGPLAN} Conference on Object-Oriented
               Programming, Systems, Languages, and Applications, {OOPSLA} 2003,
               October 26-30, 2003, Anaheim, CA, {USA}},
  booktitle = {{OOPSLA}},
  pages     = {221--239},
  Xpublisher = {{ACM}},
  year      = 2003,
  Xurl       = {https://doi.org/10.1145/949344.949402},
  Xdoi       = {10.1145/949344.949402},
  Xtimestamp = {Sat, 26 Jun 2021 14:39:41 +0200},
  Xbiburl    = {https://dblp.org/rec/conf/oopsla/Rinard03.bib},
  Xbibsource = {dblp computer science bibliography, https://dblp.org}
}

@INPROCEEDINGS{gordonJefferyRobustSafety,

  author={Gordon, A.D. and Jeffrey, A.},

  booktitle={Proceedings. 14th IEEE Computer Security Foundations Workshop, 2001.}, 

  title={Authenticity by typing for security protocols}, 

  year={2001},

  volume={},

  number={},

  pages={145-159},

  doi={10.1109/CSFW.2001.930143}}

@article{robustSafetyPatrignani,
author = {Patrignani, Marco and Garg, Deepak},
title = {Robustly Safe Compilation, an Efficient Form of Secure Compilation},
year = {2021},
issue_date = {April 2021},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {43},
number = {1},
issn = {0164-0925},
url = {https://doi.org/10.1145/3436809},
doi = {10.1145/3436809},
abstract = {Security-preserving compilers generate compiled code that withstands target-level
attacks such as alteration of control flow, data leaks, or memory corruption. Many
existing security-preserving compilers are proven to be fully abstract, meaning that
they reflect and preserve observational equivalence. Fully abstract compilation is
strong and useful but, in certain cases, comes at the cost of requiring expensive
runtime constructs in compiled code. These constructs may have no relevance for security,
but are needed to accommodate differences between the source and target languages
that fully abstract compilation necessarily needs.As an alternative to fully abstract
compilation, this article explores a different criterion for secure compilation called
robustly safe compilation or RSC. Briefly, this criterion means that the compiled
code preserves relevant safety properties of the source program against all adversarial
contexts interacting with the compiled program. We show that RSC can be proved more
easily than fully abstract compilation and also often results in more efficient code.
We also present two different proof techniques for establishing that a compiler attains
RSC and, to illustrate them, develop three illustrative robustly safe compilers that
rely on different target-level protection mechanisms. We then proceed to turn one
of our compilers into a fully abstract one and through this example argue that proving
RSC can be simpler than proving full abstraction.To better explain and clarify notions,
this article uses syntax highlighting in a way that colourblind and black-8-white
readers can benefit from Reference [58]. For a better experience, please print or
view this article in colour.1},
journal = {ACM Trans. Program. Lang. Syst.},
month = feb,
articleno = {1},
numpages = {41},
keywords = {robustly-safe compilation, fully abstract compilation, Secure compilation, programming languages, robust safety, formal languages}
}

% SOPHIA's additions on 29.09.2021

@INPROCEEDINGS{BIMutable,
author = {Samin Ishtiaq and Peter O'Hearn},
title = {{BI as an Assertion Language for Mutable Data Structures}},
booktitle={POPL},
year = {2001},
month = {January},
publisher = {Association for Computing Machinery} 
}
  
@INPROCEEDINGS{RealxedC11,
author = {Viktor Vafeiadis and Chinmay Narayan},
title = {Relaxed separation logic: a program logic for {C11} concurrency},
booktitle={OOPSLA},
year = {2013},
month = {October},
xpublisher = {Association for Computing Machinery} 
}

@article{EiffelCook,
   author = {William Cook},
   title = {{A Proposal for Making Eiffel Type-Safe}},
   journal = {ACM Computer Journal},
   year = {1989}
}
  
  

@misc{JavaAccess,
 author ={{Geeks for Geeks}},
  TITLE     = {{A}ccess and {N}on {A}ccess {M}{odifiers in {J}ava}},
 note	= {https://www.geeksforgeeks.org/access-and-non-access-modifiers-in-java/},
   year ={2021}
}


@inproceedings{mindori,
   title = {{Uniqueness and Reference Immutability for Safe Parallelism}},
  author = {Gordon, Colin S. and Parkinson, Matthew J. and Parsons, Jared and Bromfield, Aleks and Duffy, Joe},
  booktitle = {{Proceedings of the 2012 ACM International Conference on Object Oriented Programming,
    Systems, Languages, and Applications (OOPSLA'12)}},
  month = oct,
  year = {2012} 
}
  
  
@inproceedings{noninteferenceOS,
   title = {{Nonininterference for Operating Systems kernels}},
  author = {Toby Murray and Daniel Matichuk and Matthew Brassil and Peter Gammie and Gerwin Klein},
  booktitle = {{International Conference on Certified Programs and Proofs}},
 month = dec,
  year = {2013} 
}
  
  @book{Meyer09,
  AUTHOR       = { Meyer, B. },
  TITLE        = {Touch of Class — Learning to Program Well with Objects
and Contracts},
  PUBLISHER    = {Springer},
  YEAR         = 2009
}  

@inproceedings{threoremsFreeSep,
  author    = {Lars Birkedal and Thomas Dinsdale-Young. and Armeal Gueneau and Guilhem Jaber and Kasper Svendsen and Nikos Tzeverlekos},
  title     = {{Theorems for Free from Separation Logic Specifications}},
  booktitle = {ICFP},
  year      = {2021}
}

@INPROCEEDINGS{Bugliesi:resource-aware,
    author = {Michele Bugliesi and Stefano Calzavara and Università Ca and Foscari Venezia and Fabienne Eigner and Matteo Maffei},
    title = {M.: Resource-Aware Authorization Policies for Statically Typed Cryptographic Protocols},
    booktitle = {In: CSF’11},
    year = {2011},
    pages = {83--98},
    publisher = {IEEE}
}
@misc{abate2019journey,
      title={Journey Beyond Full Abstraction: Exploring Robust Property Preservation for Secure Compilation}, 
      author={Carmine Abate and Roberto Blanco and Deepak Garg and Catalin Hritcu and Marco Patrignani and Jérémy Thibault},
      year={2019},
      eprint={1807.04603},
      archivePrefix={arXiv},
      primaryClass={cs.PL}
}

@article{vanproving,
  title={Proving full-system security properties under multiple attacker models on capability machines},
  author={Van Strydonck, Thomas and Georges, A{\i}na Linn and Gu{\'e}neau, Arma{\"e}l and Trieu, Alix and Timany, Amin and Piessens, Frank and Birkedal, Lars and Devriese, Dominique},
    year = {2022},
number = {CSF},
}



@inproceedings{davis2019cheriabi,
  author = {Davis, Brooks and Watson, Robert N. M. and Richardson, Alexander and Neumann, Peter G. and Moore, Simon W. and Baldwin, John and Chisnall, David and Clarke, James and Filardo, Nathaniel Wesley and Gudka, Khilan and Joannou, Alexandre and Laurie, Ben and Markettos, A. Theodore and Maste, J. Edward and Mazzinghi, Alfredo and Napierala, Edward Tomasz and Norton, Robert M. and Roe, Michael and Sewell, Peter and Son, Stacey and Woodruff, Jonathan},
  title = {{CheriABI: Enforcing Valid Pointer Provenance and Minimizing Pointer Privilege in the POSIX C Run-time Environment}},
  booktitle = {Proceedings of the Twenty-Fourth International Conference on Architectural Support for Programming Languages and Operating Systems},
  year = {2019},
  month = apr,
  publisher = {ACM},
  url = {https://www.microsoft.com/en-us/research/publication/cheriabi-enforcing-valid-pointer-provenance-and-minimizing-pointer-privilege-in-the-posix-c-run-time-environment/},
  pdf = {https://www.cl.cam.ac.uk/research/security/ctsrd/pdfs/201904-asplos-cheriabi.pdf},
  pages = {379-393},
  note = {Best paper award winner}
}

@book{10.5555/2584504,
author = {Chlipala, Adam},
title = {Certified Programming with Dependent Types: A Pragmatic Introduction to the Coq Proof Assistant},
year = {2013},
isbn = {0262026651},
publisher = {The MIT Press},
abstract = {The technology of mechanized program verification can play a supporting role in many kinds of research projects in computer science, and related tools for formal proof-checking are seeing increasing adoption in mathematics and engineering. This book provides an introduction to the Coq software for writing and checking mathematical proofs. It takes a practical engineering focus throughout, emphasizing techniques that will help users to build, understand, and maintain large Coq developments and minimize the cost of code change over time. Two topics, rarely discussed elsewhere, are covered in detail: effective dependently typed programming (making productive use of a feature at the heart of the Coq system) and construction of domain-specific proof tactics. Almost every subject covered is also relevant to interactive computer theorem proving in general, not just program verification, demonstrated through examples of verified programs applied in many different sorts of formalizations. The book develops a unique automated proof style and applies it throughout; even experienced Coq users may benefit from reading about basic Coq concepts from this novel perspective. The book also offers a library of tactics, or programs that find proofs, designed for use with examples in the book. Readers will acquire the necessary skills to reimplement these tactics in other settings by the end of the book. All of the code appearing in the book is freely available online.}
}













@Book{RustPL2,
  author =       {Steve Klabnik and Carol Nichols},
  title =        {The Rust Programming Language},
  xpublisher =   {No Starch Press},
  year =         2018,
  edition =      {2nd}}


@article{RustBelt18,
 author = {Jung, Ralf and Jourdan, Jacques-Henri and Krebbers, Robbert and Dreyer, Derek},
 title = {RustBelt: Securing the Foundations of the Rust Programming Language},
 journal = {{PACMPL}},
 issue_date = {January 2018},
 volume = {2},
 number = {POPL},
 month = jan,
 year = {2017},
 XXissn = {2475-1421},
 pages = {66:1--66:34},
 articleno = {66},
 Xnumpages = {34},
 Xurl = {http://doi.acm.org/10.1145/3158154},
 Sdoi = {10.1145/3158154},
 Sacmid = {3158154},
 xpublisher = {ACM},
 Saddress = {New York, NY, USA},
 Xkeywords = {Rust, concurrency, logical relations, separation logic, type systems},
} 



@inproceedings{PotterNC98,
  author       = {John Potter and
                  James Noble and
                  David G. Clarke},
  title        = {The Ins and Outs of Objects},
  booktitle    = {Australian Software Engineering Conference},
  pages        = {80--89},
  Xpublisher    = {{IEEE} Computer Society},
  year         = {1998}
}

@article{HillNP02,
  author       = {Trent Hill and
                  James Noble and
                  John Potter},
  title        = {Scalable Visualizations of Object-Oriented Systems with Ownership Trees},
  journal      = {J. Vis. Lang. Comput.},
  volume       = 13,
  number       = 3,
  pages        = {319--339},
  year         = 2002
}

@Article{ownership-confinement-jacm2004,
  Author =       {Anindya Banerjee and David A.~Naumann},

Journal =      {{JACM}},
  Month =        nov,
  Number =       6,
  Pages =        {894--960},
  Title =        {{O}wnership {C}onfinement {E}nsures {R}epresentation
                  {I}ndependence for {O}bject-{O}riented {P}rograms},
  Volume =       52,
  Year =         2004
}

@article{confined-toplas2007,
  author       = {Christian Grothoff and
                  Jens Palsberg and
                  Jan Vitek},
  title        = {Encapsulating objects with confined types},
  journal      = {{ACM} Trans. Program. Lang. Syst.},
  volume       = {29},
  number       = {6},
  pages        = {32},
  year         = {2007}
}

@inproceedings{borrow-fract-vmcai2024,
  author       = {Takashi Nakayama and
                  Yusuke Matsushita and
                  Ken Sakayori and
                  Ryosuke Sato and
                  Naoki Kobayashi},
  title        = {Borrowable Fractional Ownership Types for Verification},
  Xbooktitle    = {{VMCAI} {(2)}},
  booktitle    = {{VMCAI}},
  Xseries       = {Lecture Notes in Computer Science},
  volume       = {LNCS14500},
  pages        = {224--246},
  Xpublisher    = {Springer},
  year         = {2024}
}

@misc{ho2024soundborrowcheckingrustsymbolic,
      title={Sound Borrow-Checking for Rust via Symbolic Semantics}, 
      author={Son Ho and Aymeric Fromherz and Jonathan Protzenko},
      year={2024},
      eprint={2404.02680},
      archivePrefix={arXiv},
      primaryClass={cs.PL},
      url={https://arxiv.org/abs/2404.02680}, 
}


@Misc{tree-borrows,
  author = 	 {Ralf Jung},
  title = 	 {From Stacks to Trees: A new aliasing model for {R}ust},
  howpublished = {\url{https://www.ralfj.de/blog/2023/06/02/tree-borrows.html}},
  month = 	 jun,
  year = 	 2023}

@inproceedings{relyGuarantee-vanStaden-mpc2015,
  author       = {Stephan van Staden},
  title        = {On Rely-Guarantee Reasoning},
  booktitle    = {{MPC}},
  Xseries       = {Lecture Notes in Computer Science},
  volume       = {{LNCS9129}},
  pages        = {30--49},
  xpublisher    = {Springer},
  year         = {2015}
}

@InProceedings{relyGuarantee-HayesJones-setss2017,
author="Hayes, Ian J.
and Jones, Cliff B.",
Xeditor="Bowen, Jonathan P.
and Liu, Zhiming
and Zhang, Zili",
title="A Guide to Rely/Guarantee Thinking",
booktitle={{SETSS~2017}},
series={{LNCS11174}},
Xbooktitle="Engineering Trustworthy Software Systems",
month=nov,
year=2018,
xpublisher="Springer International Publishing",
xaddress="Cham",
pages="1--38",
xabstract="Designing concurrent shared-variable programs is difficult. The Rely-Guarantee concept provides a compositional approach to the challenge. This paper reviews some recent developments in the approach, offers worked examples and relates the approach to other research.",
isbn="978-3-030-02928-9"
}

@article{cerise-jacm2024,
  author       = {A{\"{\i}}na Linn Georges and
                  Arma{\"{e}}l Gu{\'{e}}neau and
                  Thomas Van Strydonck and
                  Amin Timany and
                  Alix Trieu and
                  Dominique Devriese and
                  Lars Birkedal},
  title        = {Cerise: Program Verification on a Capability Machine in the Presence
                  of Untrusted Code},
  journal      = {J. {ACM}},
  volume       = {71},
  number       = {1},
  pages        = {3:1--3:59},
  year         = {2024}
}

@article{vmsl-pldi2023,
  author       = {Zongyuan Liu and
                  Sergei Stepanenko and
                  Jean Pichon{-}Pharabod and
                  Amin Timany and
                  Aslan Askarov and
                  Lars Birkedal},
  title        = {{VMSL:} {A} Separation Logic for Mechanised Robust Safety of Virtual
                  Machines Communicating above {FF-A}},
  journal      = {Proc. {ACM} Program. Lang.},
  volume       = {7},
  number       = {{PLDI}},
  pages        = {1438--1462},
  year         = {2023}
}



@article{compositional-hypersafety-oopsla2022,
  author       = {Emanuele D'Osualdo and
                  Azadeh Farzan and
                  Derek Dreyer},
  title        = {Proving hypersafety compositionally},
  journal      = {Proc. {ACM} Program. Lang.},
  volume       = {6},
  number       = {{OOPSLA2}},
  pages        = {289--314},
  year         = {2022}
}


@inproceedings{RustHorn-pldi2022,
author = {Matsushita, Yusuke and Denis, Xavier and Jourdan, Jacques-Henri and Dreyer, Derek},
title = {RustHornBelt: a semantic foundation for functional verification of Rust programs with unsafe code},
year = {2022},
Xisbn = {9781450392655},
Xpublisher = {Association for Computing Machinery},
Xaddress = {New York, NY, USA},
Xurl = {https://doi.org/10.1145/3519939.3523704},
doi = {10.1145/3519939.3523704},
Xabstract = {Rust is a systems programming language that offers both low-level memory operations and high-level safety guarantees, via a strong ownership type system that prohibits mutation of aliased state. In prior work, Matsushita&nbsp;et&nbsp;al. developed RustHorn, a promising technique for functional verification of Rust code: it leverages the strong invariants of Rust types to express the behavior of stateful Rust code with first-order logic (FOL) formulas, whose verification is amenable to off-the-shelf automated techniques. RustHorn’s key idea is to use prophecies to describe the behavior of mutable borrows. However, the soundness of RustHorn was only established for a safe subset of Rust, and it has remained unclear how to extend it to support various safe APIs that encapsulate unsafe code (i.e., code where Rust’s aliasing discipline is relaxed). In this paper, we present RustHornBelt, the first machine-checked proof of soundness for RustHorn-style verification which supports giving FOL specs to safe APIs implemented with unsafe code. RustHornBelt employs the approach of semantic typing used in Jung&nbsp;et&nbsp;al.’s RustBelt framework, but it extends RustBelt’s model to reason not only about safety but also functional correctness. The key challenge in RustHornBelt is to develop a semantic model of RustHorn-style prophecies, which we achieve via a new separation-logic mechanism we call parametric prophecies.},
xbooktitle = {Proceedings of the 43rd ACM SIGPLAN International Conference on Programming Language Design and Implementation},
booktitle = {{PLDI}},
pages = {841–856},
numpages = {16},
xkeywords = {verification, type systems, separation logic, prophecy variables, Rust, Iris},
xlocation = {San Diego, CA, USA},
xseries = {PLDI 2022}
}

@inproceedings{RustHornBelt-pldi2022,
  author       = {Yusuke Matsushita and
                  Xavier Denis and
                  Jacques{-}Henri Jourdan and
                  Derek Dreyer},
  title        = {RustHornBelt: a semantic foundation for functional verification of
                  Rust programs with unsafe code},
  booktitle    = {{PLDI}},
  pages        = {841--856},
  publisher    = {{ACM}},
  year         = {2022}
}



@inproceedings{RefinedC-pldi2021,
  author       = {Michael Sammler and
                  Rodolphe Lepigre and
                  Robbert Krebbers and
                  Kayvan Memarian and
                  Derek Dreyer and
                  Deepak Garg},
  title        = {RefinedC: automating the foundational verification of {C} code with
                  refined ownership types},
  booktitle    = {{PLDI}},
  pages        = {158--174},
  publisher    = {{ACM}},
  year         = {2021}
}



@article{iris-jfp2018,
  author       = {Ralf Jung and
                  Robbert Krebbers and
                  Jacques{-}Henri Jourdan and
                  Ales Bizjak and
                  Lars Birkedal and
                  Derek Dreyer},
  title        = {Iris from the ground up: {A} modular foundation for higher-order concurrent
                  separation logic},
  journal      = {J. Funct. Program.},
  volume       = {28},
  pages        = {e20},
  year         = {2018}
}



@InProceedings{consolidating-pldi2024,
author = {Wei, Guannan and Xie, Danning and Zhang, Wuqi and Yuan, Yongwei and Zhang, Zhuo},
title = {Consolidating Smart Contracts with Behavioral Contracts},
year = {2024},
Xissue_date = {June 2024},
Xpublisher = {Association for Computing Machinery},
Xaddress = {New York, NY, USA},
Xvolume = {8},
Xnumber = {{PLDI}},
booktitle = {{PLDI}},
Xurl = {https://doi.org/10.1145/3656416},
doi = {10.1145/3656416},
month = {jun},
Xarticleno = {186},
Xnumpages = {25},
Xkeywords = {behavioral contracts, runtime verification, smart contracts, specification}
}


@article{CassezFQ24,
  author       = {Franck Cassez and
                  Joanne Fuller and
                  Horacio Mijail Anton Quiles},
  title        = {Deductive verification of smart contracts with {D}afny},
  journal      = {Int. J. Softw. Tools Technol. Transf.},
  volume       = {26},
  number       = {2},
  pages        = {131--145},
  year         = {2024}
}


@inproceedings{funk-ownership2024,
author = {Marshall, Daniel and Orchard, Dominic},
title = {Functional Ownership through Fractional Uniqueness},
year = {2024},
Xissue_date = {April 2024},
Xpublisher = {Association for Computing Machinery},
Xaddress = {New York, NY, USA},
Xvolume = {8},
Xnumber = {OOPSLA1},
booktitle = {{OOPSLA}},
Xurl = {https://doi.org/10.1145/3649848},
doi = {10.1145/3649848},
Xabstract = {Ownership and borrowing systems, designed to enforce safe memory management without the need for garbage collection, have been brought to the fore by the Rust programming language. Rust also aims to bring some guarantees offered by functional programming into the realm of performant systems code, but the type system is largely separate from the ownership model, with type and borrow checking happening in separate compilation phases. Recent models such as RustBelt and Oxide aim to formalise Rust in depth, but there is less focus on integrating the basic ideas into more traditional type systems. An approach designed to expose an essential core for ownership and borrowing would open the door for functional languages to borrow concepts found in Rust and other ownership frameworks, so that more programmers can enjoy their benefits.  

One strategy for managing memory in a functional setting is through uniqueness types, but these offer a coarse-grained view: either a value has exactly one reference, and can be mutated safely, or it cannot, since other references may exist. Recent work demonstrates that linear and uniqueness types can be combined in a single system to offer restrictions on program behaviour and guarantees about memory usage. We develop this connection further, showing that just as graded type systems like those of Granule and Idris generalise linearity, a Rust-like ownership model arises as a graded generalisation of uniqueness. We combine fractional permissions with grading to give the first account of ownership and borrowing that smoothly integrates into a standard type system alongside linearity and graded types, and extend Granule accordingly with these ideas.},
Xjournal = {Proc. ACM Program. Lang.},
month = {apr},
Xarticleno = {131},
Xnumpages = {31},
Xkeywords = {borrowing, fractional permissions, graded modal types, ownership}
}


@inProceedings{hyper-hoare-pldi2024,
author = {Dardinier, Thibault and M\"{u}ller, Peter},
title = {Hyper Hoare Logic: (Dis-)Proving Program Hyperproperties},
year = {2024},
Xissue_date = {June 2024},
Xpublisher = {Association for Computing Machinery},
Xaddress = {New York, NY, USA},
volume = {8},
number = {PLDI},
booktitle = {{PLDI}},
Xurl = {https://doi.org/10.1145/3656437},
doi = {10.1145/3656437},
Xabstract = {Hoare logics are proof systems that allow one to formally establish properties of computer programs. Traditional Hoare logics prove properties of individual program executions (such as functional correctness). Hoare logic has been generalized to prove also properties of multiple executions of a program (so-called hyperproperties, such as determinism or non-interference). These program logics prove the absence of (bad combinations of) executions. On the other hand, program logics similar to Hoare logic have been proposed to disprove program properties (e.g., Incorrectness Logic), by proving the existence of (bad combinations of) executions. All of these logics have in common that they specify program properties using assertions over a fixed number of states, for instance, a single pre- and post-state for functional properties or pairs of pre- and post-states for non-interference.  
In this paper, we present Hyper Hoare Logic, a generalization of Hoare logic that lifts assertions to properties of arbitrary sets of states. The resulting logic is simple yet expressive: its judgments can express arbitrary program hyperproperties, a particular class of hyperproperties over the set of terminating executions of a program (including properties of individual program executions). By allowing assertions to reason about sets of states, Hyper Hoare Logic can reason about both the absence and the existence of (combinations of) executions, and, thereby, supports both proving and disproving program (hyper-)properties within the same logic, including (hyper-)properties that no existing Hoare logic can express. We prove that Hyper Hoare Logic is sound and complete, and demonstrate that it captures important proof principles naturally. All our technical results have been proved in Isabelle/HOL.},
Xjournal = {Proc. ACM Program. Lang.},
month = {jun},
Xarticleno = {207},
Xnumpages = {25},
Xkeywords = {Hyperproperties, Incorrectness Logic, Non-Interference, Program Logic}
}




@InProceedings{ocaml-ownership-icfp2024,
  author = 	 {Anton Lorenzen and Stephen Dolan and Richard A. Eisenberg and Sam Lindley},
  title = 	 {Oxidizing {OCaml} with Modal Memory Management},
  booktitle = {{ICFP}},
  year = 	 2024}


@InProceedings{verus-oopsla2023,
author = {Lattuada, Andrea and Hance, Travis and Cho, Chanhee and Brun, Matthias and Subasinghe, Isitha and Zhou, Yi and Howell, Jon and Parno, Bryan and Hawblitzel, Chris},
title = {{Verus}: Verifying {R}ust Programs using Linear Ghost Types},
year = {2023},
issue_date = {April 2023},
Xpublisher = {Association for Computing Machinery},
Xaddress = {New York, NY, USA},
volume = {7},
Xumber = {OOPSLA1},
booktitle = {{OOPSLA}},
Xurl = {https://doi.org/10.1145/3586037},
doi = {10.1145/3586037},
Xjournal = {Proc. ACM Program. Lang.},
month = {apr},
Xarticleno = {85},
Xnumpages = {30},
Xkeywords = {systems verification, linear types, Rust}
}

@Inbook{Cok2022,
author="Cok, David R.
and Leino, K. Rustan M.",
Xeditor="Ahrendt, Wolfgang
and Beckert, Bernhard
and Bubel, Richard
and Johnsen, Einar Broch",
title="Specifying the Boundary Between Unverified and Verified Code",
bookTitle="The Logic of Software. A Tasting Menu of Formal Methods: Essays Dedicated to Reiner H{\"a}hnle on the Occasion of His 60th Birthday",
year="2022",
Xpublisher="Springer International Publishing",
Xaddress="Cham",
Xpages="105--128",
Xabstract="This paper introduces a specification construct that is fitting when combining verified code with unverified code. The specification is a form of precondition that imposes proof obligations for both callers and callees. This precondition, , blends in well with the parameter-validation conventions in Java and with the syntax and semantics of specification languages such as JML, ACSL, and Dafny.",
zisbn="978-3-031-08166-8",
doi="10.1007/978-3-031-08166-8_6",
xurl="https://doi.org/10.1007/978-3-031-08166-8_6"
}


@article{secure-io-fstar-popl2024,
  author       = {Cezar{-}Constantin Andrici and
                  {\c{S}}tefan Ciob{\^{a}}c{\u{a}} and
                  Catalin Hritcu and
                  Guido Mart{\'{\i}}nez and
                  Exequiel Rivas and
                  {\'{E}}ric Tanter and
                  Th{\'{e}}o Winterhalter},
  title        = {Securing Verified {IO} Programs Against Unverified Code in {F}},
  Xjournal      = {Proc. {ACM} Program. Lang.},
  volume       = {8},
  booktitle       = {{POPL}},
  pages        = {2226--2259},
  year         = {2024}
}


@article{gradual-verification-popl2024,
author = {Zimmerman, Conrad and DiVincenzo, Jenna and Aldrich, Jonathan},
title = {Sound Gradual Verification with Symbolic Execution},
year = {2024},
issue_date = {January 2024},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {8},
number = {POPL},
url = {https://doi.org/10.1145/3632927},
doi = {10.1145/3632927},
abstract = {Gradual verification, which supports explicitly partial specifications  
and verifies them with a combination of static and dynamic checks, makes  
verification more incremental and provides earlier feedback to developers.  
While an abstract, weakest precondition-based approach to gradual verification  
was previously proven sound, the approach did not provide sufficient guidance  
for implementation and optimization of the required run-time checks. More  
recently, gradual verification was implemented using symbolic execution  
techniques, but the soundness of the approach (as with related static  
checkers based on implicit dynamic frames) was an open question. This paper  
puts practical gradual verification on a sound footing with a formalization  
of symbolic execution, optimized run-time check generation, and run time  
execution. We prove our approach is sound; our proof also covers a core  
subset of the Viper tool, for which we are aware of no previous soundness result.  
Our formalization enabled us to find a soundness bug in an implemented gradual  
verification tool and describe the fix necessary to make it sound.},
journal = {Proc. ACM Program. Lang.},
month = {jan},
articleno = {85},
numpages = {30},
keywords = {gradual verification, implicit dynamic frames, soundness proof, static verification, symbolic execution}
}

@Misc{MAME-SSEM,
  author = 	 {Ryan Holtz},
  title = 	 {{Small-Scale Experimental Machine}},
  howpublished = {\url{http://adb.arcadeitalia.net/dettaglio_mame.php?game_name=ssem}},
  month = 	 jun,
  year = 	 2009}


@book{Smalltalk-bits,
  title = 	 {{S}malltalk-80: Bits of History, Words of Advice},
  publisher = "Addison-Wesley",
  year = 	 1983,
  editor =	 {Glenn Krasner},
}
