\ProvidesPackage{definitions}[2021/05/18 v1.0 chainmailDefs]

\usepackage{xspace}
\usepackage{tcolorbox}
\usepackage{calrsfs}
\usepackage{tikz}
\usetikzlibrary{arrows,positioning}
\DeclareMathAlphabet{\pazocal}{OMS}{zplm}{m}{n}

\newtcolorbox{proofBox}[3][]
{
  colframe = #3,
  colback  = #2,
  #1,
}

\lstset{ % General setup for the package
	language=Java,
	basicstyle=\scriptsize\sffamily\ttfamily,
 	numberstyle=\tiny,
    numbers=left,
 	frame = bottomline,
	tabsize=4,
	columns=fixed,
	showstringspaces=false,
	showtabs=false,
	keepspaces,
	morekeywords={this, true, false, field, method, module, presumes, achieves, requires, ensures, PRE, POST, ghost, bool, int, constr, bool, int, hidden},
	commentstyle=\color{red},
	keywordstyle=\color{blue}
}

\lstdefinelanguage{Chainmail}{
  basicstyle=\scriptsize\sffamily\ttfamily,
  morekeywords={calls, external, internal, access, this, PRE, POST, method, field, ghost, class, module, hidden, void, if, then, else,
                from, onlyThrough, onlyIf, nxt, to, true, false, through, bool, int},
  sensitive=false,
  morecomment=[l]{//},
  morecomment=[s]{/*}{*/},
  morestring=[b]",
}

\newcommand{\internalO}{internal\xspace}  % for internal object 
\newcommand{\internalC}{internal\xspace}  % for internal call 
\newcommand{\internalM}{internal\xspace}   % for internal module
\newcommand{\externalM}{external\xspace}    % for external module
\newcommand{\externalC}{external\xspace} % for external call
\newcommand{\externalO}{external\xspace}  % for external object
\newcommand{\enclosed}{\texttt{hidden}\xspace}  % for external object


%constrained reduction
\newcommand{\constrained}{\mathrel{\leadsto\ \!\!\!\!{\raisebox{1pt}{$\mathsmaller{\mathsmaller{\mathsmaller{\mathsmaller\rvert}}}$}}}}
\newcommand{\reduction}[4]{#1 ; #2,\ #3 \leadsto #4}
\newcommand{\reductions}[4]{#1 ; #2,\ #3\ \leadsto^* #4}
\newcommand{\exec}[3]{#1, #2 \leadsto\ #3}
\newcommand{\constrainedReduction}[4]{#1 ; #2 \bullet #3 \constrained #4}
\newcommand{\constrainedReductions}[4]{#1 ; #2 \bullet #3 \constrained^* #4}
\newcommand{\satisfies}[2]{#1 \vDash #2}
\newcommand{\satisfiesA}[3]{\satisfies{#1 , #2}{#3}}
\newcommand{\notsatisfies}[4]{#1 ; #2, #3 \nvDash #4}
\newcommand{\eval}[4]{#1, #2, #3 \hookrightarrow #4}
\newcommand{\class}[2]{\textit{classOf}(#1, #2)}
\newcommand{\meth}[3]{\textit{Meth}(#1, #2, #3)}
\newcommand{\interpret}[2]{\lfloor #2 \rfloor_{#1}}
\newcommand{\initial}[1]{\textit{Initial}(#1)}
\newcommand{\arising}[3]{\textit{Arising}(#1, #2, #3)}
\newcommand{\adapt}[2]{#1 \triangleleft #2}

\newcommand\trans{\mathlarger{\mathlarger \leadsto}}
\newcommand\intstep{\hspace{1.5mm}{\raisebox{3pt}{$\bullet$}}\hspace{-1.5mm}{\hookrightarrow}}
\newcommand\en{\hspace{1.5mm}{\raisebox{0pt}{$\bullet$}}\hspace{-4mm}{\hookrightarrow}}
\newcommand\oi{\hspace{1mm}{\raisebox{1pt}{$\bullet$}}\hspace{-1mm}{\trans}}
\newcommand\ot{\hspace{2mm}{\raisebox{1pt}{$\bullet$}}\hspace{-3mm}{\trans}}
\newcommand\otAlt{\hspace{2mm}{\raisebox{0.5pt}{$\bullet$}}\hspace{-2.75mm}{\trans}}
\newcommand\mut[3]{\langle #1\ \texttt{mut}\ #2.#3 \rangle}
\newcommand\gives[3]{\langle #1\ \texttt{gives}\ #2\ \texttt{to}\ #3 \rangle}
\newcommand\exposes[2]{#1\ \texttt{exposes}\ #2}
\newcommand\univ{U}
\newcommand\onlyIf[3]{{\color{blue}\texttt{from}}\ #1\ {\color{blue}\texttt{to}}\ #2\ {\color{blue}\texttt{onlyIf}}\ #3}
\newcommand\oiInternal[4]{#1\ {\color{blue}\texttt{to}}\ #2\ {\color{blue}\texttt{through}}\ #3\ {\color{blue}\texttt{onlyIf}}\ #4}
\newcommand\ensures[3]{#1,\ #2\ \en\ #3}
\newcommand\onlyThrough[3]{{\color{blue}\texttt{from}}\ #1\ {\color{blue}\texttt{to}}\ #2\ {\color{blue}\texttt{onlyThough}}\ #3}
\newcommand\onlyIfSingle[3]{{\color{blue}\texttt{from}}\ #1\ {\color{blue}\texttt{nxt}}\ #2\ {\color{blue}\texttt{onlyIf}}\ #3}
\newcommand\onlyIfProof[4]{{\color{blue}\texttt{from}}\ #1\ \vdash\ #2,\ #3\ \texttt{only if}\ #4}
\newcommand\onlyThroughProof[4]{{\color{blue}\texttt{from}}\ #1\ \vdash\ #2,\ #3\ \texttt{only if}\ #4}
\newcommand\hoare[3]{\{#1\}\ #2\ \{#3\}}
\newcommand\hoareIf[4]{#1,\ #2,\ \{#3\}\ \intstep\ #4}
\newcommand\rtrns[3]{\{#1\}\ #2\ \texttt{returns}\ #3}
%\newcommand\ifthenelse[3]{\texttt{if}\ #1\ \texttt{then}\ #2\ \texttt{else}\ #3}

\newcommand\encapsulated[1]{\langle {\color{blue}\texttt{encapsulated}}\ #1 \rangle}
\newcommand\encapsulates[2]{\langle #1\ {\color{blue}\texttt{encapsulates}}\ #2 \rangle}
\newcommand\bencapsulated[1]{\langle {\color{blue}\texttt{encapsulated}_{\mathcal{B}}}\ #1 \rangle}
\newcommand\bencapsulates[2]{\langle #1\ {\color{blue}\texttt{encapsulates}_{\mathcal{B}}}\ #2 \rangle}
\newcommand\encapsulatesStrong[2]{\langle #1\ \texttt{encapsulates}_\texttt{strong}\ #2 \rangle}
\newcommand\encapsulatesMdl[1]{\langle \texttt{encapsulating}_\texttt{int}\ #1 \rangle}
\newcommand\calls[4]{\langle #1\ {\color{blue}\texttt{calls}}\ #2.#3(#4) \rangle}
\newcommand\changes[2]{\langle #1\ {\color{blue}\texttt{changes}}\ #2 \rangle}
\newcommand\access[2]{\langle #1\ {\color{blue}\texttt{access}}\ #2 \rangle}
\newcommand\internal[1]{\langle #1\ {\color{blue}\texttt{internal}}\rangle}
\newcommand\external[1]{\langle #1\ {\color{blue}\texttt{external}}\rangle}
\newcommand\comprehension[2]{\{#1 | #2\}}
\newcommand\internalStep{\langle \texttt{internal step}\rangle}
\newcommand\I{\textit{Int}\xspace}
%\newcommand\Chainmail{\textit{SpecX}\xspace}
\newcommand\SpecO{\textit{SpecW}\xspace}
\newcommand\Loo{\text{$\textit{LangX}$}\xspace}
\newcommand\new[2]{\texttt{new}\ #1(#2)}
\newcommand\return[1]{\texttt{return}\ #1}
%\newcommand\this{\texttt{this}}
\newcommand\true{\texttt{true}}
\newcommand\false{\texttt{false}}
\newcommand\nul{\texttt{null}}
\newcommand\all[2]{\forall #1.[#2]}
\newcommand\ex[2]{\exists\ #1.[#2]}

\newcommand{\prg}[1]{{\texttt{#1}}}

\newcommand\encaps[1]{\textit{Enc}(#1)}
\newcommand\intrnl[1]{\textit{Intrnl}(#1)}
\newcommand\givenA[2]{#1\ \Rightarrow\ #2}

\newcommand\proves[2]{#1\ \vdash\ #2}

\newcommand\wrapped[1]{\texttt{wrapped}( #1 )}

\newcommand\IntSet{\mathbb{Z}}

\newcommand{\synbar}{\;\; | \;\;}
	
\newcommand{\red}[1]{
	\color{red}#1 \color{black}
}
\newcommand{\blue}[1]{
	\color{blue}#1 \color{black}
}

\newcommand{\citeauthorwithyear}[1]{\citeauthor{#1} \citeyear{#1}}




%\renewcommand{\Chainmail}{\textit{Necessity}$^{spec}$\xspace}  
%\newcommand{\Chainspec}{\textit{Necessity}$^{spec}$\xspace}
%\newcommand{\Chainlogic}{\textit{Necessity}$^{logic}$\xspace}
%\newcommand{\NecessitySpecifications}{Necessity Specifications\xspace}
%\newcommand{\NecessitySpecification}{Necessity Specification\xspace}
\renewcommand{\SpecO}{\textit{Basic}$^{spec}$\xspace}
\renewcommand{\SpecO}{\textit{Assert}\xspace}  
%\renewcommand{\Loo}{\textit{L}$_{oo}^{typed}$\xspace}
\renewcommand{\Loo}{\ensuremath{{\mathcal L}{_{\tt {oo}}}{^{\tt {typed}}}}\xspace}
\renewcommand{\Loo}{\ensuremath{{{\tt {TooL}}}}\xspace}
\newcommand{\LangOO} {\ensuremath{{\mathcal L}{_{\tt {oo}}}}\xspace}
\newcommand{\Nec}{\textit{Necessity}\xspace}  

\newtheorem{axiom}{Axiom}
\numberwithin{axiom}{section}
%--------------------------------------------------------------------------------------------------	
	
% Syntax Construct
\makeatletter 

\newenvironment{syntax}
    {
    \begin{array}{lllr}
    }
    { 
    \end{array}
    }
    
\newcommand{\syntaxID}[2]{
		#1 & & & \text{\bf{#2}}\\
}
    
\newcommand{\syntaxInSet}[3]{
		#1 & \in & #2 & \text{\bf{#3}}\\
}

\newcommand{\syntaxElement}[3]{%
		#1 & ::= & #3 & \text{\bf{#2}} \\
			\@syntaxEntry
}

\newcommand\@syntaxEntry{\@ifnextchar\endSyntaxElement{\@syntaxElementEnd}{\@syntaxEntryCheck}}

\newcommand\@syntaxEntryCheck[1]{%
  \@syntaxEntryMake{\synbar #1}
  \@syntaxEntry
}
\newcommand\@syntaxEntryMake[1]{%
	& & #1 & \\
	}
\newcommand\@syntaxElementEnd[1]{
	\vspace*{-\bigskipamount}
	}
\makeatother


%--------------------------------------------------------------------------------------------------	
	
% Syntax Line
\makeatletter

\newcommand{\syntaxline}[1]{%
		#1 \@syntaxLineNext
}
\newcommand\@syntaxLineNext{\@ifnextchar\endsyntaxline{\@syntaxLineEnd}{\@syntaxLineCheck}}

\newcommand\@syntaxLineCheck[1]{%
  \@syntaxLineMake{#1}
  \@syntaxLineNext
}
\newcommand\@syntaxLineMake[1]{%
	\synbar #1
	}
\newcommand\@syntaxLineEnd[1]{}
\makeatother


%--------------------------------------------------------------------------------------------------	
	
% proof example

\makeatletter 

\newenvironment{proofexample}
    {
    \begin{minipage}{\textwidth}
    \tiny
    \begin{proofBox}{white}{black}
    }
    {
    \end{proofBox}
    \end{minipage}
    }

\newcommand\hoareEx[3]{\noindent\{\ \texttt{#1}\ \}\\ \hspace*{5pt} \texttt{#2} \\ \hspace*{5pt} \{\ \texttt{#3}\ \}}
\newcommand\onlyIfEx[3]{\blue{from} \noindent\texttt{#1}\\ \hspace*{5pt} \blue{to} \texttt{#2} \\ \hspace*{5pt} \blue{onlyIf} \texttt{#3}}
\newcommand\onlyIfExAlt[3]{\blue{from} \noindent\texttt{#1}\\ \hspace*{5pt} \blue{to} \texttt{#2}  \hspace*{5pt} \blue{onlyIf} \texttt{#3}}
\newcommand\onlyIfSingleEx[3]{\blue{from} \noindent\texttt{#1}\\ \hspace*{5pt} \blue{nxt} \texttt{#2} \\ \hspace*{5pt} \blue{onlyIf} \texttt{#3}}
\newcommand\onlyIfSingleExAlt[3]{\blue{from} \noindent\texttt{#1}\\ \hspace*{5pt} \blue{nxt} \texttt{#2} \hspace*{5pt} \blue{onlyIf} \texttt{#3}}
\newcommand\onlyThroughEx[3]{\blue{from} \noindent\texttt{#1}\\ \hspace*{5pt} \blue{to} \texttt{#2} \\ \hspace*{5pt} \blue{onlyThrough} \texttt{#3}}
\newcommand\onlyThroughExAlt[3]{\blue{from} \noindent\texttt{#1}\\ \hspace*{5pt} \blue{to} \texttt{#2}  \hspace*{5pt} \blue{onlyThrough} \texttt{#3}}
\newcommand\case[2]{\textbf{Case #1:}\\ #2}

\newcommand{\proofstepwithrule}[2]{
	\begin{minipage}{0.75\textwidth}
		\hrulefill\\
		#1 \\
		\vspace{-1mm}
	\end{minipage} \hfill
	\begin{minipage}{0.2\textwidth}
		#2
	\end{minipage}	
}

\newcommand{\proofsteps}[1]{%
			\vspace{-1.5mm}
			\textbf{#1}:\\
%			\begin{minipage}{0.70\textwidth}
%%				\fbox{
%					\begin{minipage}{\textwidth}
%						#2
%					\end{minipage}
%%					}
%			\end{minipage} \hfill
%			\begin{minipage}{0.25\textwidth}
%				\rightline{#3}
%			\end{minipage}
			\@proofStep
}

%\newcommand\@secondproofStep{\@ifnextchar\endproofsteps{\@proofstepEnd}{\@secondProofStepCheck}}
%
%\newcommand\@secondProofStepCheck[2]{%
%  \@secondProofStepMake{#1}{#2}
%  \@proofStep 
%}
%\newcommand\@secondProofStepMake[2]{%
%	\begin{minipage}{0.7\textwidth}
%		\vspace{1mm}
%		#1 \\
%		\vspace{0.1mm}
%	\end{minipage} \hfill
%	\begin{minipage}{0.25\textwidth}
%		\rightline{#2}
%	\end{minipage}
%	}

\newcommand\@proofStep{\@ifnextchar\endproofsteps{\@proofstepEnd}{\@proofStepCheck}}

\newcommand\@proofStepCheck[1]{%
  \@proofStepMake{#1}
  \@proofStep 
}

\newcommand\@proofStepMake[1]{%
		#1 \\
	}
\newcommand\@proofstepEnd[1]{\vspace{-3mm}}

\makeatother
