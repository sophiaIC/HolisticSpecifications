This artifact is a coq model and associated proofs for the Necessity Proof System

Requirements:
Coq version 8.15.2

Detailed Guide:
This artifact provides proofs for 4 results stated in the paper:

* a Coq model of the Necessity proof system (necessity.v)
* a proof of adherence of the Simple Bank Account of section 5 of the paper (simple_bank_account.v)
* a proof of adherence of the more complex Bank Account of appendix G of the paper (bank_account.v)
* a proof of soundness of the necessity proof system (necessity_soundness.v, see Theorem necessity_triple_soundness)

The entire model and its sources are quite large, and as we note in the paper, make several key assumptions that are
detailed here:

1) We assume the existence of a proof system for assert, the underlying logic (defined in section 3 & assert.v)
2) We assume the existence of a proof system for proving encapsulation of assertions (see section 4.1)
3) We assume soundness of the encapsulation system
4) we assume the existence of some proof system for proving classic hoare triples (defined in hoare.v)
5) we assume soundenss of the the proof system mentioned in (4)
6) we assume a type system that places several restrictions on programs, notably
   a) classes may be annotated as "inside", thus restricting how objects of those classes may be passed around
   b) modules are type checked in isolation, effectively prohibiting calls from internal library code to
      external client code. This is covered in the paper (see section 2)

Note: the coq model differs superficially in the case of some names, specifically what is referred to as "inside"
in the paper (see section 3), is referred to as "wrapped" in the coq model.
